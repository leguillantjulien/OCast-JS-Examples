{"version":3,"file":"ocast.es5.js","sources":["../src/channel/media.notifier.ts","../src/type/enum.error.ts","../src/type/enum.media.status.ts","../src/type/enum.media.ts","../src/type/enum.track.ts","../src/type/enum.transfermode.ts","../src/type/enum.transport.ts","../src/protocol/transport.ts","../src/protocol/transport.message.ts","../src/util/logger.ts","../src/util/uuid.ts","../src/channel/channel.ts","../src/protocol/playback.status.ts","../src/media/image.playback.status.ts","../src/protocol/metadata.ts","../src/media/media.ts","../src/media/image.media.ts","../src/protocol/track.ts","../src/media/video.playback.status.ts","../src/media/video.media.ts","../src/channel/enum.media.messages.ts","../src/channel/media.channel.ts","../src/channel/webapp.channel.ts","../src/ocast.ts","../src/index.ts","../ocast.ts"],"sourcesContent":["/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Metadata} from \"../protocol/metadata\";\nimport {PlaybackStatus} from \"../protocol/playback.status\";\nimport {EnumError} from \"../type/enum.error\";\nimport {EnumMedia} from \"../type/enum.media\";\nimport {EnumTrack} from \"../type/enum.track\";\nimport {EnumTransferMode} from \"../type/enum.transfermode\";\n\nexport interface IMediaNotifier {\n\n    /**\n     * Override this method to implement prepare command\n     * @param {url} url - Url of the source\n     * @param {string} title - Title of the media\n     * @param {string}subtitle - subtitle of the media\n     * @param {string} logo - Optionnal Logo\n     * @param {EnumMedia} mediaType - Media Type\n     * @param {EnumTransferMode} transferMode - Type of Stream\n     * @param {boolean} autoplay - Boolean to play stream automaticly\n     * @param {number} frequency - Status update Frequency\n     * @param options - Options\n     * @returns {EnumError}\n     */\n    onPrepare(url: string, title: string, subtitle: string, logo: string, mediaType: EnumMedia,\n                         transferMode: EnumTransferMode, autoplay: boolean, frequency: number,\n                         options: any): EnumError | Promise<EnumError>;\n\n    /**\n     * pause\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    onPause(options: any): EnumError | Promise<EnumError>;\n\n    /**\n     * track\n     * @param type\n     * @param trackId\n     * @param enabled\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    onTrack(type: EnumTrack, trackId: string, enabled: boolean, options): EnumError | Promise<EnumError>;\n\n    /**\n     * resume\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    onResume(options: any): EnumError | Promise<EnumError>;\n\n    /**\n     * stop\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    onStop(options: any): EnumError | Promise<EnumError>;\n\n    /**\n     * close\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    onClose(options: any): EnumError | Promise<EnumError>;\n\n    /**\n     * on Seek\n     * @param {position} position\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    onSeek(position: number, options: any): EnumError | Promise<EnumError>;\n\n    /**\n     * Implements  volume command\n     * @param {number} volume\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    onVolume(volume: number, options: any): EnumError | Promise<EnumError>;\n\n    /**\n     * Send a mute command\n     * @param {boolean} mute\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n     onMute(mute: boolean, options: any): EnumError | Promise<EnumError>;\n\n    /**\n     * @param {PlaybackStatus} status\n     * @param options\n     */\n     onUpdateStatus(status: PlaybackStatus, options: any): void;\n\n    /**\n     * @param {Metadata} metadata\n     * @param options\n     */\n     onUpdateMetadata(metadata: Metadata, options: any): void;\n\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Enum for error values.\n * @readonly\n * @enum {number}\n */\nexport enum EnumError {\n    /** OK Value */\n    OK = 0,\n    /** The message cannot be proceed by the application, not the receiver for this namespace */\n    INVALID_NAMESPACE = 2404,\n    /** In the namespace org.ocast.media, the command is not implemented by the application */\n    NO_IMPLEMENTATION = 2400,\n    /** Invalid Track */\n    INVALID_TRACK = 2414,\n    /** Parameter are missing */\n    PARAMS_MISSING = 2422,\n    /** The command cannot be performed according to the player state */\n    PLAYER_INVALID_STATE = 2412,\n    /** The command cannot be performed according to the player state */\n    NO_PLAYER_INITIALIZED = 2413,\n    /** The mediaType is not known */\n    UNKNOWN_MEDIA_TYPE = 2415,\n    /** The tranferMode is not known */\n    UNKNOWN_TRANSFER_MODE = 2006,\n    /** Internal Error, please send details on the tracker */\n    UNKNOWN_ERROR = 2500,\n    /** In the namespace org.ocast.media, the command is not implemented by the application */\n    IMPLEMENTATION_ERROR = 2400,\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Media Status Enum\n */\nexport enum EnumMediaStatus {\n    UNKNOWN = 0,\n    IDLE = 1,\n    PLAYING = 2,\n    PAUSED = 3,\n    BUFFERING = 4,\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n *  Enum Media\n */\nexport enum EnumMedia {\n    VIDEO = \"video\",\n    IMAGE = \"image\",\n    AUDIO = \"audio\",\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n *  Enum Track\n */\nexport enum EnumTrack {\n    VIDEO = \"video\",\n    TEXT = \"text\",\n    AUDIO = \"audio\",\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Transfer Mode\n */\nexport enum EnumTransferMode {\n    STREAMED = \"streamed\",\n    BUFFERED = \"buffered\",\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Enum Transport\n */\nexport enum EnumTransport {\n    REPLY = \"reply\",\n    COMMAND = \"command\",\n    EVENT = \"event\",\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {EnumTransport} from \"../type/enum.transport\";\nimport {TransportMessage} from \"./transport.message\";\n\n/**\n * Transport Class\n */\nexport class Transport {\n    public static WILDCARD: string = \"*\";\n    public static UUID: string = \"browser\";\n\n    private status: string;\n\n    /**\n     * Constructor\n     * @param src\n     * @param dst\n     * @param type\n     * @param id\n     * @param message\n     */\n    constructor(public src: string,\n                public dst: string,\n                public type: EnumTransport,\n                public id: number,\n                public message: TransportMessage) {\n\n    }\n\n    /**\n     * Set status of message ( OK or Error Message )\n     * @param {string} status\n     */\n    public setStatus(status: string) {\n        this.status = status;\n    }\n\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Specific Message\n */\nexport class TransportMessage {\n\n    /**\n     * @constructor\n     * @param {string} service\n     * @param {any} data\n     */\n    constructor(public service: string, public data: any) {\n\n    }\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Logger {\n\n    public static DEBUG: number = 0;\n    public static INFO: number = 1;\n    public static WARN: number = 2;\n    public static ERROR: number = 3;\n    public static NONE: number = 99;\n\n    public static getInstance() {\n        if (!Logger.instance) {\n            Logger.instance = new Logger();\n            Logger.instance.setDebugLevel(Logger.INFO);\n        }\n        return Logger.instance;\n    }\n\n    private static instance: Logger;\n\n    public debug = null;\n    public info = null;\n    public warn = null;\n    public error = null;\n\n    constructor() {\n        this.setDebugLevel(Logger.INFO);\n    }\n\n    public setDebugLevel(level: number) {\n        /* tslint:disable:no-console */\n        this.debug = (() => {\n            let timestamp = () => {/*empty*/};\n            timestamp.toString = () => {\n                return (new Date()).toISOString() + \" - [DEBUG]\";\n            };\n            return console.log.bind(console, \"%s\", timestamp);\n        } )();\n        this.info = (() => {\n            let timestamp = () => {/*empty*/};\n            timestamp.toString = () => {\n                return (new Date()).toISOString() + \" - [INFO]\";\n            };\n            return console.log.bind(console, \"%s\", timestamp);\n        } )();\n        this.warn = (() => {\n            let timestamp = () => {/*empty*/};\n            timestamp.toString = () => {\n                return (new Date()).toISOString() + \" - [WARNING]\";\n            };\n            return console.log.bind(console, \"%s\", timestamp);\n        } )();\n        this.error = (() => {\n            let timestamp = () => {/*empty*/};\n            timestamp.toString = () => {\n                return (new Date()).toISOString() + \" - [ERROR]\";\n            };\n            return console.log.bind(console, \"%s\", timestamp);\n        } )();\n        if (level > Logger.DEBUG) {\n            this.debug = () => { return false; };\n        }\n        if (level > Logger.INFO) {\n            this.info = () => { return false; };\n        }\n        if (level > Logger.WARN) {\n            this.warn = () => { return false; };\n        }\n        if (level > Logger.ERROR) {\n            this.error = () => { return false; };\n        }\n    }\n}\n","//  Generate UUID (RFC 4122) in Typescript\r\nexport function uuid(): string {\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (char) => {\r\n        // tslint:disable-next-line:no-bitwise\r\n        let random = Math.random() * 16 | 0;\r\n        let value = char === \"x\" ? random : (random % 4 + 8);\r\n        return value.toString(16);\r\n    });\r\n}\r\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Transport} from \"../protocol/transport\";\nimport {TransportMessage} from \"../protocol/transport.message\";\nimport {EnumError} from \"../type/enum.error\";\nimport {EnumTransport} from \"../type/enum.transport\";\nimport {Logger} from \"../util/logger\";\nimport {uuid} from \"../util/uuid\";\n\nconst TAG: string = \" [Channel] \";\nconst UUID: string = uuid();\nconst WILDCARD: string = \"*\";\n// tslint:disable-next-line:no-var-requires\nconst WebSocket = require(\"ws\");\n\nconst Log: Logger = Logger.getInstance();\n\n/**\n * Base Channel Class used to Communicate with the Controller\n */\nexport class Channel {\n    protected static sequenceMessage: number = 1;\n    public ws: WebSocket = null;\n    public waitingReplies: {[key: string]: (transport: Transport) => void} = {};\n\n    /**\n     * Represents a Channel.\n     * @constructor\n     * @param {string} name - The service name of the channel, used to route the message.\n     */\n    constructor(public name: string) {\n    }\n\n    public setSocket(websocket: WebSocket) {\n        this.ws = websocket;\n    }\n\n    /**\n     * Method used to notify a new message for this Channel\n     * @param {Transport} transport - message received\n     */\n    public onMessage(transport: Transport) {\n        if (transport.type === EnumTransport.REPLY) {\n            const id = transport.id;\n            if (this.waitingReplies[id]) {\n                this.waitingReplies[id](transport.message.data);\n                delete this.waitingReplies[id];\n            }\n            return;\n        }\n        Log.warn(TAG + \"onMessage need to be implemented for namespace \" + this.name);\n        this.sendReply(transport.id, transport.src, {params: {code: EnumError.NO_IMPLEMENTATION}});\n    }\n\n    /**\n     * send command event\n     * @param {string} dst - Destination identifier\n     * @param {any} data - Data of the command\n     */\n    public sendCommand(dst: string, data: any) {\n        const message = new Transport(UUID, dst, EnumTransport.COMMAND, Channel.sequenceMessage++,\n            new TransportMessage(this.name, data));\n        Log.debug(TAG + \"sendCommand : \" + JSON.stringify(message));\n        return new Promise((resolve, reject) => {\n            this.waitingReplies[message.id] = resolve;\n            this.sendMessage(message);\n        });\n    }\n\n    /**\n     * send Reply Command\n     * @param {number} id - Request identifier\n     * @param {string} dst - Destination identifier\n     * @param {any} data - Data of the reply\n     */\n    public sendReply(id: number, dst: string, data: any) {\n        const message = new Transport(UUID, dst, EnumTransport.REPLY, id, new TransportMessage(this.name, data));\n        message.setStatus(\"OK\");\n        Log.debug(TAG + \"sendReply : \" + JSON.stringify(message));\n        this.sendMessage(message);\n    }\n\n    /**\n     * sendEvent\n     * @param {any} data - Data of the event\n     */\n    public sendEvent(data: any) {\n        const message = new Transport(UUID, WILDCARD, EnumTransport.EVENT, Channel.sequenceMessage++,\n            new TransportMessage(this.name, data));\n        Log.debug(TAG + \"sendEvent : \" + JSON.stringify(message));\n        this.sendMessage(message);\n    }\n\n    /**\n     * Send Transport : Basic Command\n     * @param {Transport} message - Message to send\n     * @private\n     */\n    public sendMessage(message: Transport) {\n        this.ws.send(JSON.stringify(message));\n    }\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {EnumMediaStatus} from \"../type/enum.media.status\";\n/**\n * PlaybackStatus Class\n */\nexport class PlaybackStatus {\n\n    /**\n     * @constructor\n     * @param {EnumMediaStatus} state - Media Status\n     * @param {number} volume - Audio volume\n     * @param {boolean} mute - Mute OnOff Value\n     * @param {number} position - Current Position\n     * @param {number} duration - Duration\n     */\n    constructor(public state: EnumMediaStatus,\n                public volume: number,\n                public mute: boolean,\n                public position: number,\n                public duration: number) {\n\n    }\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {PlaybackStatus} from \"../protocol/playback.status\";\nimport {EnumMediaStatus} from \"../type/enum.media.status\";\n\n/**\n * Image Playback Status\n */\nexport class ImagePlaybackStatus extends PlaybackStatus {\n\n    /**\n     * @param {EnumMediaStatus} status\n     */\n    constructor(public status: EnumMediaStatus) {\n        super(status, null, null, null, null);\n    }\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {EnumMedia} from \"../type/enum.media\";\nimport {EnumTrack} from \"../type/enum.track\";\nimport {EnumTransferMode} from \"../type/enum.transfermode\";\nimport {Track} from \"./track\";\n\n/**\n * Metadata Root Object\n */\nexport class Metadata {\n\n    public textTracks: Track[];\n    public audioTracks: Track[];\n    public videoTracks: Track[];\n    /**\n     *\n     * @param {string} title\n     * @param {string} subtitle\n     * @param {string} logo\n     * @param {EnumMedia} mediaType\n     * @param {EnumTransferMode} transferMode\n     */\n    constructor(public title: string,\n                public subtitle: string,\n                public logo: string,\n                public mediaType: EnumMedia,\n                public transferMode: EnumTransferMode) {\n        this.textTracks = [];\n        this.audioTracks = [];\n        this.videoTracks = [];\n    }\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MediaChannel } from \"../channel/media.channel\";\nimport { Metadata } from \"../protocol/metadata\";\nimport { PlaybackStatus } from \"../protocol/playback.status\";\nimport { Track } from \"../protocol/track\";\nimport { EnumError } from \"../type/enum.error\";\nimport { EnumMedia } from \"../type/enum.media\";\nimport { EnumMediaStatus } from \"../type/enum.media.status\";\nimport { EnumTrack } from \"../type/enum.track\";\nimport { EnumTransferMode } from \"../type/enum.transfermode\";\nimport { Logger } from \"../util/logger\";\n\nconst Log: Logger = Logger.getInstance();\n\n/**\n * Base Class MediaController\n */\nexport abstract class Media {\n  public updateFrequency: number;\n  public metadata: Metadata;\n  protected statusHandler: any;\n  protected metadataHandler: any;\n  private lastUpdate: number;\n\n  /**\n   * @constructor:\n   * @param mediaElement\n   * @param mediaChannel\n   */\n  constructor(public mediaElement: any, public mediaChannel: MediaChannel) {\n    this.mediaElement.status = EnumMediaStatus.IDLE;\n    this.lastUpdate = 0;\n    // bind media listeners on onUpdateStatus\n    this.statusHandler = this.onUpdateStatus.bind(this);\n    this.metadataHandler = this.onUpdateMetadata.bind(this);\n    this.metadata = null;\n  }\n\n  /**\n   * Return Status\n   * @returns {any}\n   */\n  public getStatus(): EnumMediaStatus {\n    return this.mediaElement\n      ? (this.mediaElement.status as EnumMediaStatus)\n      : null;\n  }\n\n  /**\n   * Set the source of the stream\n   * @param {string} src - url of the stream\n   */\n  public abstract load(src: string, autoplay?: boolean);\n\n  /**\n   * update frequency\n   * @param frequency\n   */\n  public setUpdateFrequency(frequency: number) {\n    this.updateFrequency = frequency;\n  }\n\n  /**\n   *\n   * @returns {PlaybackStatus}\n   */\n  public abstract getPlaybackStatus(): PlaybackStatus; // must be implemented in derived class\n\n  /**\n   *\n   * @returns {Metadata}\n   */\n  public abstract setMetadata(\n    title: string,\n    subtitle: string,\n    logo: string,\n    mediaType: EnumMedia,\n    transferMode: EnumTransferMode,\n  );\n  /**\n   * return Metadatas\n   * @returns {Metadata}\n   */\n  public abstract getMedatadata(): Metadata;\n\n  public seek(position: number): EnumError {\n    return EnumError.NO_IMPLEMENTATION;\n  }\n\n  public setVolume(level: number): EnumError {\n    return EnumError.NO_IMPLEMENTATION;\n  }\n\n  public setMute(mute: boolean): EnumError {\n    return EnumError.NO_IMPLEMENTATION;\n  }\n\n  public pause(): EnumError {\n    return EnumError.NO_IMPLEMENTATION;\n  }\n\n  public stop(): EnumError {\n    this.clear();\n    this.updateStatus(EnumMediaStatus.IDLE);\n    return EnumError.OK;\n  }\n\n  public abort(): EnumError {\n    this.clear();\n    this.updateStatus(EnumMediaStatus.IDLE);\n    return EnumError.OK;\n  }\n\n  public resume(): EnumError {\n    return EnumError.NO_IMPLEMENTATION;\n  }\n\n  /**\n   * erase media player\n   */\n  public clear(): void {\n    this.load(null);\n    this.removeListeners();\n  }\n\n  public setTrack(\n    type: EnumTrack,\n    trackId: string,\n    enabled: boolean,\n  ): EnumError {\n    return EnumError.NO_IMPLEMENTATION;\n  }\n\n  protected abstract getMediaEvents();\n\n  /**\n   * Add Listeners\n   * @private\n   */\n  protected addListeners(): void {\n    const events: any = this.getMediaEvents();\n    for (const event in events) {\n      if (events.hasOwnProperty(event)) {\n        Log.debug(\"add Event Listener on <<<\" + event + \">>>\");\n        this.mediaElement.addEventListener(event, this.statusHandler);\n      }\n    }\n    this.mediaElement.addEventListener(\"loadedmetadata\", this.metadataHandler);\n  }\n\n  /**\n   * Remove Listeners\n   * @private\n   */\n  protected removeListeners(): void {\n    const events: any = this.getMediaEvents();\n    for (const event in events) {\n      if (events.hasOwnProperty(event)) {\n        this.mediaElement.removeEventListener(event, this.statusHandler);\n      }\n    }\n  }\n  protected onUpdateMetadata(event): void {\n    if (!this.mediaElement) {\n      console.warn(\"MediaElement is null, ignore event \", event);\n      return;\n    }\n    this.mediaChannel.onUpdateMetadata(this.getMedatadata());\n  }\n\n  private onUpdateStatus(event) {\n    const mapping = this.getMediaEvents();\n    this.updateStatus(mapping[event.type]);\n  }\n\n  private updateStatus(status) {\n    if (!this.mediaElement) {\n      Log.warn(\"MediaElement is null, ignore event \", event);\n      return;\n    }\n    const newUpdate = new Date().getTime();\n\n    const previousStatus = this.mediaElement.status;\n    this.mediaElement.status = status;\n\n    // Dispatch Event If Needed\n    if (previousStatus !== this.mediaElement.status) {\n      this.lastUpdate = newUpdate;\n      this.mediaChannel.onUpdateStatus(this.getPlaybackStatus());\n    } else if (\n      this.updateFrequency !== 0 &&\n      newUpdate > this.lastUpdate + this.updateFrequency * 1000\n    ) {\n      this.lastUpdate = newUpdate;\n      this.mediaChannel.onUpdateStatus(this.getPlaybackStatus());\n    }\n\n    // Manage Automatic Transition\n    if (\n      this.mediaElement.status === EnumMediaStatus.IDLE ||\n      this.mediaElement.status === EnumMediaStatus.UNKNOWN\n    ) {\n      this.mediaElement.status = EnumMediaStatus.IDLE;\n      this.mediaChannel.onUpdateStatus(this.getPlaybackStatus());\n    }\n  }\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ImagePlaybackStatus } from \"../media/image.playback.status\";\nimport { Metadata } from \"../protocol/metadata\";\nimport { PlaybackStatus } from \"../protocol/playback.status\";\nimport { EnumMedia } from \"../type/enum.media\";\nimport { EnumMediaStatus } from \"../type/enum.media.status\";\nimport { EnumTransferMode } from \"../type/enum.transfermode\";\nimport { Media } from \"./media\";\n\n/**\n * Media Controller for Images\n */\nexport class ImageMedia extends Media {\n  /**\n   * Return get playback Status\n   * @returns {PlaybackStatus} - Play back Status\n   */\n  public getPlaybackStatus(): PlaybackStatus {\n    // TODO: Adapt PlaybackStatus for Images ?\n    return new ImagePlaybackStatus(this.mediaElement.status) as PlaybackStatus;\n  }\n\n  /** set metadata\n   * @param title\n   * @param subtitle\n   * @param logo\n   * @param mediaType\n   * @param transferMode\n   * @param subtitleTracks\n   * @param audioTracks\n   */\n  public setMetadata(\n    title: string,\n    subtitle: string,\n    logo: string,\n    mediaType: EnumMedia,\n    transferMode: EnumTransferMode,\n  ) {\n    // TODO: Adapt metadata for Images ?\n    this.metadata = new Metadata(\n      title,\n      subtitle,\n      logo,\n      mediaType,\n      transferMode,\n    );\n  }\n\n  public getMedatadata(): Metadata {\n    return this.metadata;\n  }\n  /**\n   * Set the source of the stream\n   * @param {string} src - url of the stream\n   */\n  public load(src: string) {\n    if (src) {\n      this.addListeners();\n      this.mediaElement.src = src;\n    } else {\n      this.mediaElement.src = \"\";\n    }\n  }\n  /**\n   * get Table of Mapping With Internal Status\n   * @returns {{ended: EnumMediaStatus, error: EnumMediaStatus, timeupdate: EnumMediaStatus}}\n   * @protected\n   */\n  protected getMediaEvents(): any {\n    return {\n      ended: EnumMediaStatus.BUFFERING,\n      error: EnumMediaStatus.UNKNOWN,\n      load: EnumMediaStatus.PLAYING,\n    };\n  }\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {EnumTrack} from \"../type/enum.track\";\n/**\n * Track Class ( Audio / Video /Text)\n */\nexport class Track {\n\n    /**\n     * Track Constructor\n     * @param type\n     * @param trackId\n     * @param enabled\n     * @param language\n     * @param label\n     */\n    constructor(public type: EnumTrack, public trackId: string, public enabled: boolean = false,\n                public language: string = \"\", public label: string = \"\") {\n    }\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {PlaybackStatus} from \"../protocol/playback.status\";\nimport {EnumMediaStatus} from \"../type/enum.media.status\";\n\n/**\n * VideoPlaybackStatus Class\n */\nexport class VideoPlaybackStatus extends PlaybackStatus {\n\n    /**\n     * @constructor\n     * @param {EnumMediaStatus} state - Media Status\n     * @param {number} volume - Audio volume\n     * @param {boolean} mute - Mute OnOff Value\n     * @param {number} position - Current Position\n     * @param {number} duration - Duration\n     */\n    constructor(public state: EnumMediaStatus,\n                public volume: number,\n                public mute: boolean,\n                public position: number,\n                public duration: number) {\n        super(state, volume, mute, position, duration);\n    }\n\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Metadata } from \"../protocol/metadata\";\nimport { PlaybackStatus } from \"../protocol/playback.status\";\nimport { Track } from \"../protocol/track\";\nimport { EnumError } from \"../type/enum.error\";\nimport { EnumMedia } from \"../type/enum.media\";\nimport { EnumMediaStatus } from \"../type/enum.media.status\";\nimport { EnumTrack } from \"../type/enum.track\";\nimport { EnumTransferMode } from \"../type/enum.transfermode\";\nimport { Logger } from \"../util/logger\";\nimport { Media } from \"./media\";\nimport { VideoPlaybackStatus } from \"./video.playback.status\";\n\nconst TAG: string = \" [VideoMedia] \";\nconst Log: Logger = Logger.getInstance();\n/**\n * Media Controller for Audio/Video\n */\nexport class VideoMedia extends Media {\n  /**\n   * Get Media Player Status\n   * @returns {PlaybackStatus}\n   */\n  public getPlaybackStatus(): PlaybackStatus {\n    return new VideoPlaybackStatus(\n      this.mediaElement.status,\n      this.mediaElement.volume,\n      this.mediaElement.muted,\n      this.mediaElement.currentTime,\n      this.mediaElement.duration,\n    ) as PlaybackStatus;\n  }\n\n  /** set metadata\n   * @param title\n   * @param subtitle\n   * @param logo\n   * @param mediaType\n   * @param transferMode\n   * @param subtitleTracks\n   * @param audioTracks\n   */\n  public setMetadata(\n    title: string,\n    subtitle: string,\n    logo: string,\n    mediaType: EnumMedia,\n    transferMode: EnumTransferMode,\n  ) {\n    this.metadata = new Metadata(\n      title,\n      subtitle,\n      logo,\n      mediaType,\n      transferMode,\n    );\n  }\n\n  public getMedatadata(): Metadata {\n    this.updateTracks();\n    return this.metadata;\n  }\n\n  public setTrack(\n    type: EnumTrack,\n    trackId: string,\n    enabled: boolean,\n  ): EnumError {\n    let status = this.getStatus();\n    let mediaVideo: any = this.mediaElement;\n    let i: number = 0;\n    if (\n      status === EnumMediaStatus.BUFFERING ||\n      status === EnumMediaStatus.PLAYING ||\n      status === EnumMediaStatus.PAUSED\n    ) {\n      try {\n        let id = parseFloat(trackId);\n        switch (type) {\n          case EnumTrack.AUDIO:\n            for (i = 0; i < mediaVideo.audioTracks.length; i++) {\n              mediaVideo.audioTracks[i].enabled = !enabled;\n            }\n            mediaVideo.audioTracks[id].enabled = enabled;\n            break;\n          case EnumTrack.VIDEO:\n            for (i = 0; i < mediaVideo.videoTracks.length; i++) {\n              mediaVideo.videoTracks[i].selected = !enabled;\n            }\n            mediaVideo.videoTracks[id].selected = enabled;\n            break;\n          case EnumTrack.TEXT:\n            for (i = 0; i < mediaVideo.textTracks.length; i++) {\n              mediaVideo.textTracks[i].mode = enabled ? \"disabled\" : \"showing\";\n            }\n            mediaVideo.textTracks[id].mode = enabled ? \"showing\" : \"disabled\";\n            break;\n          default:\n            return EnumError.INVALID_TRACK;\n        }\n        return EnumError.OK;\n      } catch (e) {\n        Log.warn(TAG + \"setTrack error : \", e);\n        return EnumError.INVALID_TRACK;\n      }\n    } else {\n      return EnumError.PLAYER_INVALID_STATE;\n    }\n  }\n  public seek(position): EnumError {\n    let status = this.getStatus();\n    if (\n      status !== EnumMediaStatus.BUFFERING &&\n      status !== EnumMediaStatus.PLAYING &&\n      status !== EnumMediaStatus.PAUSED\n    ) {\n      return EnumError.PLAYER_INVALID_STATE;\n    }\n    this.mediaElement.currentTime = position;\n    return EnumError.OK;\n  }\n\n  public setVolume(level: number): EnumError {\n    let status = this.getStatus();\n    if (\n      status !== EnumMediaStatus.PLAYING &&\n      status !== EnumMediaStatus.PAUSED\n    ) {\n      return EnumError.PLAYER_INVALID_STATE;\n    }\n    this.mediaElement.volume = level;\n    return EnumError.OK;\n  }\n\n  public setMute(mute: boolean): EnumError {\n    let status = this.getStatus();\n    if (\n      status !== EnumMediaStatus.PLAYING &&\n      status !== EnumMediaStatus.PAUSED\n    ) {\n      return EnumError.PLAYER_INVALID_STATE;\n    }\n    this.mediaElement.muted = mute;\n    return EnumError.OK;\n  }\n\n  public pause(): EnumError {\n    let status = this.getStatus();\n    if (\n      status !== EnumMediaStatus.BUFFERING &&\n      status !== EnumMediaStatus.PLAYING\n    ) {\n      return EnumError.PLAYER_INVALID_STATE;\n    }\n    this.mediaElement.pause();\n    return EnumError.OK;\n  }\n\n  public resume(): EnumError {\n    let status = this.getStatus();\n    if (status !== EnumMediaStatus.PAUSED) {\n      return EnumError.PLAYER_INVALID_STATE;\n    }\n    this.mediaElement.play();\n    return EnumError.OK;\n  }\n  /**\n   * Set the source of the stream\n   * @param {string} src - url of the stream\n   */\n  public load(src: string, autoplay?: boolean) {\n    if (autoplay !== undefined) {\n      this.mediaElement.autoplay = autoplay;\n    }\n    if (src) {\n      this.addListeners();\n      this.mediaElement.src = src;\n    } else {\n      this.mediaElement.pause();\n      this.mediaElement.src = \"\";\n      this.mediaElement.load();\n    }\n  }\n\n  /**\n   * get is Live Status\n   * @returns {boolean}\n   */\n  get isLive(): boolean {\n    return this.metadata.transferMode === EnumTransferMode.STREAMED;\n  }\n\n  /**\n   * return Mapping with internal Values\n   * @returns {{abort: EnumMediaStatus, ended: EnumMediaStatus, error: EnumMediaStatus, loadstart: EnumMediaStatus,\n   * pause: EnumMediaStatus, playing: EnumMediaStatus, seeking: EnumMediaStatus, timeupdate: EnumMediaStatus}}\n   * @protected\n   */\n  protected getMediaEvents() {\n    return {\n      abort: EnumMediaStatus.IDLE,\n      ended: EnumMediaStatus.IDLE,\n      error: EnumMediaStatus.UNKNOWN,\n      loadstart: EnumMediaStatus.BUFFERING,\n      pause: EnumMediaStatus.PAUSED,\n      playing: EnumMediaStatus.PLAYING,\n      seeking: EnumMediaStatus.BUFFERING,\n      timeupdate: EnumMediaStatus.PLAYING,\n    };\n  }\n  protected onUpdateMetadata(event): void {\n    if (!this.mediaElement) {\n      Log.error(\"MediaElement is null, ignore event (\" + event.type + \")\");\n      return;\n    }\n    if (!this.metadata) {\n      Log.error(\"Metadata is null !!! ( implementation error )\");\n      return;\n    }\n\n    if (\n      !(\n        this.mediaElement.audioTracks &&\n        this.mediaElement.videoTracks &&\n        this.mediaElement.textTracks\n      )\n    ) {\n      Log.debug(\"Tracks not implemented !!! ( implementation error )\");\n    }\n    let signature: string = JSON.stringify(this.metadata);\n    this.updateTracks();\n    if (JSON.stringify(this.metadata) !== signature) {\n      this.mediaChannel.onUpdateMetadata(this.getMedatadata());\n    }\n  }\n\n  /**\n   * Check if all fields are fill on a track\n   * @param track Track to check\n   * @param type Track type (video, audio, text)\n   * @param trackNumber Track index\n   * @param properties Properties to check into track\n   */\n  private logTrackMissingFields(track: any, type: string, trackNumber: number,\n    properties: Array<{ src: string, dest?: string }>): void {\n    properties.forEach((property) => {\n      if (!property.dest) {\n        property.dest = property.src;\n      }\n      if (!track.hasOwnProperty(property.src)) {\n        let logText: string = TAG + \" When extract metadatas, \" + type + \" track \" + trackNumber + \" haven't \" +\n          property.src + \" property defined\";\n        if (property.dest !== property.src) {\n          logText += \" (to set '\" + property.dest + \"' property)\";\n        }\n        Log.info(logText);\n      }\n    });\n  }\n\n  private updateTracks() {\n    // Catch AudioTracks\n    let tracks;\n    tracks = [];\n    // TODO: Refactor this code (redundancy)\n    const audioTracks: AudioTrackList = this.mediaElement.audioTracks;\n    if (audioTracks) {\n      for (let index = 0; index < audioTracks.length; index++) {\n        const audioTrack: AudioTrack = audioTracks[index];\n        this.logTrackMissingFields(audioTrack, \"audio\", index, [\n          {src: \"enabled\"},\n          {src: \"language\"},\n          {src: \"label\"},\n        ]);\n        tracks.push(\n          new Track(\n            EnumTrack.AUDIO,\n            index.toString(),\n            audioTrack.enabled,\n            audioTrack.language,\n            audioTrack.label,\n          ),\n        );\n      }\n      this.metadata.audioTracks = tracks;\n    }\n    // Catch VideoTracks\n    tracks = [];\n    const videoTracks: VideoTrackList = this.mediaElement.videoTracks;\n    if (videoTracks) {\n      for (let index = 0; index < videoTracks.length; index++) {\n        const videoTrack: VideoTrack = videoTracks[index];\n        this.logTrackMissingFields(videoTrack, \"audio\", index, [\n          {src: \"selected\", dest: \"enabled\"},\n          {src: \"language\"},\n          {src: \"label\"},\n        ]);\n        tracks.push(\n          new Track(\n            EnumTrack.VIDEO,\n            index.toString(),\n            videoTrack.selected,\n            videoTrack.language,\n            videoTrack.label,\n          ),\n        );\n      };\n      this.metadata.videoTracks = tracks;\n    }\n    // Catch TextTracks\n    tracks = [];\n    const textTracks: TextTrackList = this.mediaElement.textTracks;\n    if (textTracks) {\n      for (let index = 0; index < textTracks.length; index++) {\n        const textTrack: TextTrack = textTracks[index];\n        this.logTrackMissingFields(textTrack, \"audio\", index, [\n          {src: \"language\"},\n          {src: \"label\"},\n        ]);\n        tracks.push(\n          new Track(\n            EnumTrack.TEXT,\n            index.toString(),\n            textTrack.mode === \"showing\",\n            textTrack.language,\n            textTrack.label,\n          ),\n        );\n      };\n      this.metadata.textTracks = tracks;\n    }\n  }\n}\n","\r\nexport enum EnumMediaMessage {\r\n    PAUSE = \"pause\",\r\n    RESUME = \"resume\",\r\n    SEEK = \"seek\",\r\n    TRACK = \"track\",\r\n    STOP = \"stop\",\r\n    CLOSE = \"close\",\r\n    VOLUME = \"volume\",\r\n    GET_PLAYBACK_STATUS = \"getPlaybackStatus\",\r\n    GET_METADATA = \"getMetadata\",\r\n    MUTE = \"mute\",\r\n    PREPARE = \"prepare\",\r\n};\r\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ImageMedia} from \"../media/image.media\";\nimport {Media} from \"../media/media\";\nimport {VideoMedia} from \"../media/video.media\";\nimport {Metadata} from \"../protocol/metadata\";\nimport {PlaybackStatus} from \"../protocol/playback.status\";\nimport {Transport} from \"../protocol/transport\";\nimport {EnumError} from \"../type/enum.error\";\nimport {EnumMedia} from \"../type/enum.media\";\nimport {EnumMediaStatus} from \"../type/enum.media.status\";\nimport {EnumTrack} from \"../type/enum.track\";\nimport {EnumTransferMode} from \"../type/enum.transfermode\";\nimport {EnumTransport} from \"../type/enum.transport\";\nimport {Logger} from \"../util/logger\";\nimport {Channel} from \"./channel\";\nimport {EnumMediaMessage} from \"./enum.media.messages\";\nimport {IMediaNotifier} from \"./media.notifier\";\n\nconst TAG: string = \" [MediaChannel] \";\nconst Log: Logger = Logger.getInstance();\n\n// Manage annotations to call methods by transport message\n// Store all methods/message type\nconst methodsByMessage: { [key: string]: IMethodWithParams } = {};\n\n/**\n * MediaChannel Class dedicated to OCast Protocol\n */\nexport class MediaChannel extends Channel {\n    public static NAMESPACE: string = \"org.ocast.media\";\n\n    protected static EVENTS: any = {\n        METADATA_CHANGED: \"metadataChanged\",\n        PLAYBACK_STATUS: \"playbackStatus\",\n    };\n    private media: Media = null;\n    private notifier: IMediaNotifier;\n    private medias: Media[] = [];\n\n    /**\n     * Base class for OCast Protocol (MediaChannel).\n     * @constructor\n     */\n    constructor() {\n        super(MediaChannel.NAMESPACE);\n    }\n\n    public setNotifier(notifier: IMediaNotifier): void {\n        this.notifier = notifier;\n    }\n\n    public addVideoMediaManager(types: EnumMedia[], mediaElement: any) {\n        let media = new VideoMedia(mediaElement, this);\n        for (const key in types) {\n            if (types.hasOwnProperty(key)) {\n                this.medias[types[key]] = media;\n            }\n        }\n    }\n\n    public addImageMediaManager(types: EnumMedia[], mediaElement: any) {\n        let media = new ImageMedia(mediaElement, this);\n        for (const key in types) {\n            if (types.hasOwnProperty(key)) {\n                this.medias[types[key]] = media;\n            }\n        }\n    }\n\n    /**\n     * Implements specific parsing for this channel\n     * @param {Transport} transport - Message to send\n     */\n    public onMessage(transport: Transport): void {\n        // Check if message is supported\n        if (!methodsByMessage[transport.message.data.name]) {\n            Log.error(TAG + \"Message type '\" + transport.message.data.name + \"' unknown\");\n            if (transport.type === EnumTransport.COMMAND) {\n                this.sendReply(transport.id, transport.src, {\n                    name: transport.message.data.name,\n                    params: { code: EnumError.NO_IMPLEMENTATION },\n                });\n            }\n            return;\n        }\n\n        // Explode message to call method\n        const methodDescriptor: IMethodWithParams = methodsByMessage[transport.message.data.name];\n        const paramsToCallMethod: any[] = [];\n        const paramsMessage: {} = transport.message.data.params || {};\n        let validate: boolean = true;\n        methodDescriptor.params.forEach((paramType: IParamWithNameAndType) => {\n            switch (paramType.name) {\n                case \"id\":\n                    paramsToCallMethod.push(transport.id);\n                    break;\n                case \"src\":\n                    paramsToCallMethod.push(transport.src);\n                    break;\n                case \"options\":\n                    paramsToCallMethod.push(transport.message.data.options);\n                    break;\n                default:\n                    if (!paramsMessage.hasOwnProperty(paramType.name)) {\n                        Log.error(TAG + \"Mandatory parameter is not found <<\" + paramType.name + \">>\");\n                        validate = false;\n                    } else {\n                        paramsToCallMethod.push(paramsMessage[paramType.name]);\n                    }\n            }\n        });\n\n        // Check if all params are ok\n        if (!validate) {\n            Log.error(TAG + \"Error while executing \" + methodDescriptor.methodName + \" paramters missing)\");\n            if (transport.type === EnumTransport.COMMAND) {\n                this.sendReply(transport.id, transport.src, {\n                    name: transport.message.data.name,\n                    params: { code: EnumError.PARAMS_MISSING },\n                });\n            }\n            return;\n        }\n\n        // All params are ok, call method\n        try {\n            const returnCode: EnumError | Promise<EnumError> = methodDescriptor.method.apply(this, paramsToCallMethod);\n            if (typeof (returnCode) !== \"undefined\") {\n                // tslint:disable-next-line:no-string-literal\n                if (typeof returnCode[\"then\"] === \"function\") {\n                    (<Promise<EnumError>> returnCode).then((result: EnumError) => {\n                        if (typeof (result) !== \"undefined\") {\n                            this.sendReply(transport.id, transport.src, {\n                                name: transport.message.data.name,\n                                params: { code: result },\n                            });\n                        }\n                    }, (e) => {\n                        Log.error(TAG + \"Error while executing \" + methodDescriptor.methodName + \" with error \", e);\n                        if (transport.type === EnumTransport.COMMAND) {\n                            this.sendReply(transport.id, transport.src, {\n                                name: transport.message.data.name,\n                                params: { code: EnumError.UNKNOWN_ERROR },\n                            });\n                        }\n                    });\n                } else {\n                    this.sendReply(transport.id, transport.src, {\n                        name: transport.message.data.name,\n                        params: { code: returnCode },\n                    });\n                }\n            }\n        } catch (e) {\n            Log.error(TAG + \"Error while executing \" + methodDescriptor.methodName + \" with error \", e);\n            if (transport.type === EnumTransport.COMMAND) {\n                this.sendReply(transport.id, transport.src, {\n                    name: transport.message.data.name,\n                    params: { code: EnumError.UNKNOWN_ERROR },\n                });\n            }\n        }\n    }\n\n    /**\n     * Override this method to implement prepare command\n     * @param {url} url - Url of the source\n     * @param {string} title - Title of the media\n     * @param {string}subtitle - subtitle of the media\n     * @param {string} logo - Optionnal Logo\n     * @param {EnumMedia} mediaType - Media Type\n     * @param {EnumTransferMode} transferMode - Type of Stream\n     * @param {boolean} autoplay - Boolean to play stream automaticly\n     * @param {number} frequency - Status update Frequency\n     * @param options - Options\n     * @returns {EnumError}\n     */\n    @MethodToCallByMessage({\n        message: EnumMediaMessage.PREPARE,\n        params: [\n            { name: \"url\", type: String },\n            { name: \"title\", type: String },\n            { name: \"subtitle\", type: String },\n            { name: \"logo\", type: String },\n            { name: \"mediaType\", type: EnumMedia },\n            { name: \"transferMode\", type: EnumTransferMode },\n            { name: \"autoplay\", type: Boolean },\n            { name: \"frequency\", type: Number },\n            { name: \"options\", type: null },\n        ],\n    })\n    public doPrepare(url: string, title: string, subtitle: string, logo: string, mediaType: EnumMedia,\n        transferMode: EnumTransferMode, autoplay: boolean, frequency: number,\n        options: any): EnumError | Promise<EnumError> {\n        Log.debug(TAG + \"onPrepare Receives (\" + url + \",\" + title + \",\" + subtitle + \",\" + logo + \",\" + mediaType +\n            \",\" + transferMode + \",\" + autoplay + \",\" + frequency + \",\" + options);\n        if (!this.medias.hasOwnProperty(mediaType)) {\n            return EnumError.NO_IMPLEMENTATION;\n        }\n        this.media = this.medias[mediaType];\n        this.media.setUpdateFrequency(frequency);\n        this.media.setMetadata(title, subtitle, logo, mediaType, transferMode);\n        this.media.load(url, autoplay);\n        return this.callNotifier(\"onPrepare\", arguments);\n    }\n\n    /**\n     * track\n     * @param subtitleTrack\n     * @param audioTrack\n     * @returns {EnumError} - Error code\n     */\n    @MethodToCallByMessage({\n        message: EnumMediaMessage.TRACK,\n        params: [\n            { name: \"type\", type: EnumTrack },\n            { name: \"trackId\", type: String },\n            { name: \"enabled\", type: Boolean },\n            { name: \"options\", type: null },\n        ],\n    })\n    public doTrack(type: EnumTrack, trackId: string, enabled: boolean, options: any): EnumError | Promise<EnumError> {\n        Log.debug(TAG + \"onTrack\");\n        if (!this.media) {\n            return EnumError.NO_PLAYER_INITIALIZED;\n        }\n        let returnCode: EnumError = this.media.setTrack(type, trackId, enabled);\n        return (returnCode !== EnumError.OK) ? returnCode : this.callNotifier(\"onTrack\", arguments);\n    }\n\n    /**\n     * resume\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    @MethodToCallByMessage({\n        message: EnumMediaMessage.RESUME,\n        params: [\n            { name: \"options\", type: null },\n        ],\n    })\n    public doResume(options: any): EnumError | Promise<EnumError> {\n        Log.debug(TAG + \"onResume\");\n        if (!this.media) {\n            return EnumError.NO_PLAYER_INITIALIZED;\n        }\n\n        let status = (this.media != null) ? this.media.getStatus() : null;\n        if ((status !== EnumMediaStatus.PAUSED)) {\n            return EnumError.PLAYER_INVALID_STATE;\n        }\n        this.media.resume();\n        return this.callNotifier(\"onResume\", arguments);\n    }\n\n    /**\n     * pause\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    @MethodToCallByMessage({\n        message: EnumMediaMessage.PAUSE,\n        params: [\n            { name: \"options\", type: null },\n        ],\n    })\n    public doPause(options: any): EnumError | Promise<EnumError> {\n        Log.debug(TAG + \"onPause\");\n        if (!this.media) {\n            return EnumError.NO_PLAYER_INITIALIZED;\n        }\n        let returnCode: EnumError = this.media.pause();\n        return (returnCode !== EnumError.OK) ? returnCode : this.callNotifier(\"onPause\", arguments);\n    }\n\n    /**\n     * stop\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    @MethodToCallByMessage({\n        message: EnumMediaMessage.STOP,\n        params: [\n            { name: \"options\", type: null },\n        ],\n    })\n    public doStop(options: any): EnumError | Promise<EnumError> {\n        Log.debug(\"onStop\");\n        if (!this.media) {\n            return EnumError.NO_PLAYER_INITIALIZED;\n        }\n\n        let returnCode: EnumError = this.media.stop();\n        return (returnCode !== EnumError.OK) ? returnCode : this.callNotifier(\"onStop\", arguments);\n    }\n\n    /**\n     * close\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    @MethodToCallByMessage({\n        message: EnumMediaMessage.CLOSE,\n        params: [\n            { name: \"options\", type: null },\n        ],\n    })\n    public doClose(options: any): EnumError | Promise<EnumError> {\n        Log.debug(TAG + \"onClose\");\n        if (!this.media) {\n            return EnumError.NO_PLAYER_INITIALIZED;\n        }\n\n        let returnCode: EnumError = this.media.abort();\n        return (returnCode !== EnumError.OK) ? returnCode : this.callNotifier(\"onClose\", arguments);\n    }\n\n    /**\n     * on Seek\n     * @param {number} position\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    @MethodToCallByMessage({\n        message: EnumMediaMessage.SEEK,\n        params: [\n            { name: \"position\", type: Number },\n            { name: \"options\", type: null },\n        ],\n    })\n    public doSeek(position: number, options: any): EnumError | Promise<EnumError> {\n\n        Log.debug(TAG + \"onSeek\");\n        if (!this.media) {\n            return EnumError.NO_PLAYER_INITIALIZED;\n        }\n\n        let returnCode: EnumError = this.media.seek(position);\n        return (returnCode !== EnumError.OK) ? returnCode : this.callNotifier(\"onSeek\", arguments);\n    }\n\n    /**\n     * Implements  volume command\n     * @param {level} volume\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    @MethodToCallByMessage({\n        message: EnumMediaMessage.VOLUME,\n        params: [\n            { name: \"volume\", type: Number },\n            { name: \"options\", type: null },\n        ],\n    })\n    public doVolume(volume: number, options: any): EnumError | Promise<EnumError> {\n        Log.debug(TAG + \"onVolume\");\n        if (!this.media) {\n            return EnumError.NO_PLAYER_INITIALIZED;\n        }\n\n        let returnCode: EnumError = this.media.setVolume(volume);\n        return (returnCode !== EnumError.OK) ? returnCode : this.callNotifier(\"onVolume\", arguments);\n    }\n\n    /**\n     * Send a mute command\n     * @param {boolean} mute\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    @MethodToCallByMessage({\n        message: EnumMediaMessage.MUTE,\n        params: [\n            { name: \"mute\", type: Boolean },\n            { name: \"options\", type: null },\n        ],\n    })\n    public doMute(mute: boolean, options: any): EnumError | Promise<EnumError> {\n        Log.debug(TAG + \"onMute\");\n        if (!this.media) {\n            return EnumError.NO_PLAYER_INITIALIZED;\n        }\n        let returnCode: EnumError = this.media.setMute(mute);\n        return (returnCode !== EnumError.OK) ? returnCode : this.callNotifier(\"onMute\", arguments);\n    }\n\n    /**\n     * getPlaybackStatus\n     * @param {number} id\n     * @param {string} src\n     * @param options\n     * @returns {EnumError} - Error code\n     */\n    @MethodToCallByMessage({\n        message: EnumMediaMessage.GET_PLAYBACK_STATUS,\n        params: [\n            { name: \"id\", type: Number },\n            { name: \"src\", type: String },\n            { name: \"options\", type: null },\n        ],\n    })\n    public doGetPlaybackStatus(id: number, src: string, options: any) {\n        Log.debug(TAG + \"onGetPlaybackStatus\" + id + \",\" + src);\n        if (!this.media) {\n            return EnumError.NO_PLAYER_INITIALIZED;\n        }\n        let status: any = this.media.getPlaybackStatus();\n        status.code = EnumError.OK;\n        this.sendReply(id, src, { name: MediaChannel.EVENTS.PLAYBACK_STATUS, params: status, options });\n    }\n\n    /**\n     * Reply to getMetadata Command\n     * @param {number} id\n     * @param {string} src\n     * @param  options\n     * @returns {EnumError} - Error code\n     */\n    @MethodToCallByMessage({\n        message: EnumMediaMessage.GET_METADATA,\n        params: [\n            { name: \"id\", type: Number },\n            { name: \"src\", type: String },\n            { name: \"options\", type: null },\n        ],\n    })\n    public doGetMetadata(id: number, src: string, options: any) {\n        Log.debug(TAG + \"onGetMetadata \" + id + \",\" + src);\n        if (!this.media) {\n            return EnumError.NO_PLAYER_INITIALIZED;\n        }\n        let status: any = this.media.getMedatadata();\n        status.code = EnumError.OK;\n        this.sendReply(id, src, { name: MediaChannel.EVENTS.METADATA_CHANGED, params: status, options });\n    }\n\n    /**\n     * Send a new playback status on MediaChannel\n     */\n    public sendPlaybackStatus() {\n        this.sendEvent({\n            name: MediaChannel.EVENTS.PLAYBACK_STATUS,\n            options: null,\n            params: this.media.getPlaybackStatus(),\n        });\n    }\n\n    /**\n     * Send a new metadachanged Event on MediaChannel\n     */\n    public sendMetadataChanged() {\n        // To be called ....\n        this.sendEvent({\n            name: MediaChannel.EVENTS.METADATA_CHANGED,\n            options: null,\n            params: this.media.getMedatadata(),\n        });\n    }\n\n    public onUpdateStatus(status: PlaybackStatus) {\n        this.sendPlaybackStatus();\n        this.callNotifier(\"onUpdateStatus\", arguments);\n    }\n\n    public onUpdateMetadata(metadata: Metadata) {\n        this.sendMetadataChanged();\n        this.callNotifier(\"onUpdateMetadata\", arguments);\n    }\n\n    private callNotifier(method: string, args): EnumError | Promise<EnumError> {\n        if (this.notifier !== undefined) {\n            try {\n                return this.notifier[method].apply(this.notifier, args);\n            } catch (e) {\n                Log.error(TAG + \"Implementation error on Notifier Method \" + method + \" : \", e);\n                Log.error(TAG + \"Implementation error on Notifier Method \" + method + \" : \", e);\n                return EnumError.IMPLEMENTATION_ERROR;\n            }\n        }\n        return EnumError.OK;\n    }\n}\n\n// Declare annotation\n/**\n * Annotation to declare a link between a method and a message\n * @param controlParams Details\n */\nfunction MethodToCallByMessage(controlParams: IMethodToCallByMessage): Function {\n    return (target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<Function>) => {\n        // When a new method is detected, store his declaration\n        methodsByMessage[controlParams.message] = {\n            method: descriptor.value,\n            methodName: propertyKey,\n            params: controlParams.params,\n        };\n    };\n}\n\n// Interfacs to declare links between methods and messages\n/**\n * Global option given to annotation MethodToCallByMessage.\n * This interface describe the link between a method and a message\n */\ninterface IMethodToCallByMessage {\n    message: string;\n    params: IParamWithNameAndType[];\n}\n\n/**\n * Declare type of each parameter\n */\ninterface IParamWithNameAndType {\n    name: string;\n    type: any;\n}\n\n/**\n * Store declared link of method/message\n */\ninterface IMethodWithParams {\n    method: Function;\n    methodName: string;\n    params: IParamWithNameAndType[];\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Logger} from \"../util/logger\";\nimport {Channel} from \"./channel\";\n\nconst TAG: string = \" [WebappChannel] \";\nconst Log: Logger = Logger.getInstance();\n\n/**\n * WebApp Channel\n */\nexport class WebappChannel extends Channel {\n    /**\n     * Default NameSpace\n     * @type {string}\n     */\n    public static NAMESPACE: string = \"org.ocast.webapp\";\n\n    /**\n     * List of Events\n     * @type {{CONNECTION_STATUS: string}}\n     */\n    protected static EVENTS: any = {\n        CONNECTION_STATUS: \"connectedStatus\",\n    };\n\n    /**\n     * Constructor\n     */\n    constructor() {\n        super(WebappChannel.NAMESPACE);\n    }\n\n    /**\n     * Update socket used by the channel\n     * @param {WebSocket} ws - Websocket instance\n     * @public\n     */\n    public setSocket(ws: WebSocket) {\n        super.setSocket(ws);\n        this.sendConnected();\n    }\n    /**\n     * send Connected Event\n     * @private\n     */\n    private sendConnected() {\n        Log.debug(TAG + \"send connected event\");\n        this.sendEvent({name: WebappChannel.EVENTS.CONNECTION_STATUS, params: {status: \"connected\"}});\n    }\n\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Channel } from \"./channel/channel\";\nimport { MediaChannel } from \"./channel/media.channel\";\nimport { WebappChannel } from \"./channel/webapp.channel\";\nimport { Transport } from \"./protocol/transport\";\nimport { TransportMessage } from \"./protocol/transport.message\";\nimport { EnumError } from \"./type/enum.error\";\nimport { EnumTransport } from \"./type/enum.transport\";\nimport { Logger } from \"./util/logger\";\n\nconst TAG: string = \" [OCast] \";\nconst Log: Logger = Logger.getInstance();\n// tslint:disable-next-line:no-var-requires\nconst WebSocket = require(\"ws\");\n\n/**\n * OCast Root Object\n */\nexport class OCast {\n  public debug = false;\n  public ws: WebSocket = null;\n  private channels: Channel[] = [];\n\n  /**\n   * OCast Root Object, create default channel 'webapp' and 'media'\n   * @constructor\n   */\n  constructor(private url: string = \"wss://localhost:4433/ocast\") {\n    this.setupMediaChannel();\n    this.setupWebappChannel();\n  }\n\n  /**\n   * Public function to Start initialization\n   * @public\n   */\n  public start(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.ws = new WebSocket(this.url, {\n        protocolVersion: 13,\n        rejectUnauthorized: false,\n      });\n      this.ws.onopen = () => {\n        resolve();\n        this.onConnected();\n      };\n      this.ws.addEventListener(\"message\", ((event) => {\n        Log.info(\"received => \" + event.data);\n      }));\n      this.ws.onmessage = this.onMessage.bind(this);\n      this.ws.onerror = (e: Event) => {\n        reject(e);\n        this.onError(e);\n      };\n      this.ws.onclose = this.onClose.bind(this);\n    });\n  }\n\n  /**\n   * Create a Custom Channel\n   * @param service\n   * @returns {MediaChannel}\n   * @public\n   */\n  public createChannel(service: string): Channel {\n    // todo: Manage duplicate channel\n    let channel: Channel = new Channel(service);\n    channel.setSocket(this.ws);\n    this.channels[service] = channel;\n    return channel;\n  }\n\n  /**\n   * Return a MediaChannel\n   * @returns {MediaChannel}\n   * @public\n   */\n  public getMediaChannel(): MediaChannel {\n    return this.getChannel(MediaChannel.NAMESPACE) as MediaChannel;\n  }\n\n  /**\n   * Return WebappChannel\n   * @returns {WebappChannel}\n   * @public\n   */\n  public getWebappChannel(): WebappChannel {\n    return this.getChannel(WebappChannel.NAMESPACE) as WebappChannel;\n  }\n\n  /**\n   * Return Channel\n   * @param {string} service Name\n   * @returns {Channel}\n   * @public\n   */\n  public getChannel(service: string): Channel {\n    return this.channels[service] as Channel;\n  }\n  /**\n   * Initialize MediaChannel\n   * @private\n   */\n  public setupChannel(channel: Channel): void {\n    this.channels[channel.name] = channel;\n  }\n  /**\n   * Initialize MediaChannel\n   * @private\n   */\n  private setupMediaChannel() {\n    let channel = new MediaChannel();\n    this.channels[channel.name] = channel;\n  }\n\n  /**\n   * Initialize MediaChannel\n   * @private\n   */\n  private setupWebappChannel(): void {\n    let channel: WebappChannel = new WebappChannel();\n    this.channels[channel.name] = channel;\n  }\n  /**\n   * publish message on internal Bus\n   * @param {Transport} transport - transport Message\n   * @private\n   */\n  private publish(transport: Transport) {\n    if (this.channels.hasOwnProperty(transport.message.service)) {\n      let channel = this.channels[transport.message.service];\n      channel.onMessage(transport);\n    } else {\n      Log.warn(\"Unknown namespace <<<\" + transport.message.service + \">>>\");\n      let message = new Transport(\n        transport.dst,\n        transport.src,\n        EnumTransport.REPLY,\n        transport.id,\n        new TransportMessage(transport.message.service, {\n          params: { code: EnumError.INVALID_NAMESPACE },\n        }),\n      );\n      this.ws.send(JSON.stringify(message));\n    }\n  }\n\n  /**\n   * Handler to receive messages\n   * @param event\n   * @private\n   */\n  private onMessage(event) {\n    Log.debug(TAG + \"receive message : \" + event.data);\n    if (event.data.type === EnumTransport.REPLY && event.data.status !== \"ok\") {\n      Log.error(TAG + \"receive error message : \" + event.data.status);\n      return;\n    }\n    let message: Transport = JSON.parse(event.data);\n    try {\n      this.publish(message);\n      return this.ws.readyState;\n    } catch (e) {\n      // todo: Catch a better way internal Errors (with call stack)\n      console.error(\"Uncaught exception\" + e);\n    }\n  }\n  private onError(error) {\n    Log.info(TAG + \"receive error event : \", error);\n  }\n\n  private onClose(close) {\n    Log.info(TAG + \"websocket is closed \");\n  }\n\n  /**\n   * Send Connected Event when Connection Opened\n   * @param event\n   */\n  private onConnected() {\n    Log.info(TAG + \"websocket onConnected event\");\n    this.updateSocketChannel();\n  }\n\n  /**\n   * Set websocket on all channels\n   * @private\n   */\n  private updateSocketChannel(): void {\n    Log.info(TAG + \"updateSocketChannel => \" + this.ws.readyState);\n    for (let key in this.channels) {\n      if (this.channels.hasOwnProperty(key)) {\n        let channel: Channel = this.channels[key];\n        channel.setSocket(this.ws);\n      }\n    }\n  }\n}\n","/*\n * Copyright 2017 Orange\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport \"./channel/media.notifier\";\n\nexport { EnumError } from \"./type/enum.error\";\nexport { EnumMediaStatus } from \"./type/enum.media.status\";\nexport { EnumMedia } from \"./type/enum.media\";\nexport { EnumTrack } from \"./type/enum.track\";\nexport { EnumTransferMode } from \"./type/enum.transfermode\";\nexport { EnumTransport } from \"./type/enum.transport\";\nexport { Channel } from \"./channel/channel\";\nexport { MediaChannel } from \"./channel/media.channel\";\nexport { WebappChannel } from \"./channel/webapp.channel\";\nexport { Media } from \"./media/media\";\nexport { IMediaNotifier } from \"./channel/media.notifier\";\nexport { VideoMedia } from \"./media/video.media\";\nexport { ImageMedia } from \"./media/image.media\";\nexport { PlaybackStatus } from \"./protocol/playback.status\";\nexport { Metadata } from \"./protocol/metadata\";\nexport { VideoPlaybackStatus } from \"./media/video.playback.status\";\nexport { Logger } from \"./util/logger\";\nexport { OCast } from \"./ocast\";\nexport { Transport } from \"./protocol/transport\";\n","/**\n * @module\n * @description\n * Entry point for ocast module.\n */\nexport * from './src/index';"],"names":["EnumError","EnumMediaStatus","EnumMedia","EnumTrack","EnumTransferMode","EnumTransport","Log","TAG","tslib_1.__decorate","WebSocket"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;GAcG;;ACdH;;;;;;;;;;;;;;;;;;;;AAqBA;AAAA,WAAY,SAAS;;IAEjB,qCAAM,CAAA;;IAEN,sEAAwB,CAAA;;IAExB,sEAAwB,CAAA;;IAExB,8DAAoB,CAAA;;IAEpB,gEAAqB,CAAA;;IAErB,4EAA2B,CAAA;;IAE3B,8EAA4B,CAAA;;IAE5B,wEAAyB,CAAA;;IAEzB,8EAA4B,CAAA;;IAE5B,8DAAoB,CAAA;;IAEpB,4EAA2B,CAAA;CAC9B,EAvBWA,iBAAS,KAATA,iBAAS,QAuBpB;;AC5CD;;;;;;;;;;;;;;;;;;AAmBA;AAAA,WAAY,eAAe;IACvB,2DAAW,CAAA;IACX,qDAAQ,CAAA;IACR,2DAAW,CAAA;IACX,yDAAU,CAAA;IACV,+DAAa,CAAA;CAChB,EANWC,uBAAe,KAAfA,uBAAe,QAM1B;;ACzBD;;;;;;;;;;;;;;;;;;AAmBA;AAAA,WAAY,SAAS;IACjB,4BAAe,CAAA;IACf,4BAAe,CAAA;IACf,4BAAe,CAAA;CAClB,EAJWC,iBAAS,KAATA,iBAAS,QAIpB;;ACvBD;;;;;;;;;;;;;;;;;;AAmBA;AAAA,WAAY,SAAS;IACjB,4BAAe,CAAA;IACf,0BAAa,CAAA;IACb,4BAAe,CAAA;CAClB,EAJWC,iBAAS,KAATA,iBAAS,QAIpB;;ACvBD;;;;;;;;;;;;;;;;;;AAmBA;AAAA,WAAY,gBAAgB;IACxB,yCAAqB,CAAA;IACrB,yCAAqB,CAAA;CACxB,EAHWC,wBAAgB,KAAhBA,wBAAgB,QAG3B;;ACtBD;;;;;;;;;;;;;;;;;;AAmBA;AAAA,WAAY,aAAa;IACrB,gCAAe,CAAA;IACf,oCAAmB,CAAA;IACnB,gCAAe,CAAA;CAClB,EAJWC,qBAAa,KAAbA,qBAAa,QAIxB;;ACvBD;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;IAcI,YAAmB,GAAW,EACX,GAAW,EACX,IAAmB,EACnB,EAAU,EACV,OAAyB;QAJzB,QAAG,GAAH,GAAG,CAAQ;QACX,QAAG,GAAH,GAAG,CAAQ;QACX,SAAI,GAAJ,IAAI,CAAe;QACnB,OAAE,GAAF,EAAE,CAAQ;QACV,YAAO,GAAP,OAAO,CAAkB;KAE3C;;;;;IAMM,SAAS,CAAC,MAAc;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;;AA3Ba,kBAAQ,GAAW,GAAG,CAAC;AACvB,cAAI,GAAW,SAAS,CAAC;;ACxB3C;;;;;;;;;;;;;;;;;;AAmBA;;;;;;IAOI,YAAmB,OAAe,EAAS,IAAS;QAAjC,YAAO,GAAP,OAAO,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAK;KAEnD;CACJ;;AC7BD;;;;;;;;;;;;;;;AAgBA;IAuBI;QALO,UAAK,GAAG,IAAI,CAAC;QACb,SAAI,GAAG,IAAI,CAAC;QACZ,SAAI,GAAG,IAAI,CAAC;QACZ,UAAK,GAAG,IAAI,CAAC;QAGhB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACnC;IAjBM,OAAO,WAAW;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAClB,MAAM,CAAC,QAAQ,GAAG,IAAI,MAAM,EAAE,CAAC;YAC/B,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC9C;QACD,OAAO,MAAM,CAAC,QAAQ,CAAC;KAC1B;IAaM,aAAa,CAAC,KAAa;;QAE9B,IAAI,CAAC,KAAK,GAAG,CAAC;YACV,IAAI,SAAS,GAAG,SAAiB,CAAC;YAClC,SAAS,CAAC,QAAQ,GAAG;gBACjB,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,WAAW,EAAE,GAAG,YAAY,CAAC;aACpD,CAAC;YACF,OAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;SACrD,GAAI,CAAC;QACN,IAAI,CAAC,IAAI,GAAG,CAAC;YACT,IAAI,SAAS,GAAG,SAAiB,CAAC;YAClC,SAAS,CAAC,QAAQ,GAAG;gBACjB,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,WAAW,EAAE,GAAG,WAAW,CAAC;aACnD,CAAC;YACF,OAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;SACrD,GAAI,CAAC;QACN,IAAI,CAAC,IAAI,GAAG,CAAC;YACT,IAAI,SAAS,GAAG,SAAiB,CAAC;YAClC,SAAS,CAAC,QAAQ,GAAG;gBACjB,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,WAAW,EAAE,GAAG,cAAc,CAAC;aACtD,CAAC;YACF,OAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;SACrD,GAAI,CAAC;QACN,IAAI,CAAC,KAAK,GAAG,CAAC;YACV,IAAI,SAAS,GAAG,SAAiB,CAAC;YAClC,SAAS,CAAC,QAAQ,GAAG;gBACjB,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,WAAW,EAAE,GAAG,YAAY,CAAC;aACpD,CAAC;YACF,OAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;SACrD,GAAI,CAAC;QACN,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,QAAQ,OAAO,KAAK,CAAC,EAAE,CAAC;SACxC;QACD,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE;YACrB,IAAI,CAAC,IAAI,GAAG,QAAQ,OAAO,KAAK,CAAC,EAAE,CAAC;SACvC;QACD,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE;YACrB,IAAI,CAAC,IAAI,GAAG,QAAQ,OAAO,KAAK,CAAC,EAAE,CAAC;SACvC;QACD,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,QAAQ,OAAO,KAAK,CAAC,EAAE,CAAC;SACxC;KACJ;;AAnEa,YAAK,GAAW,CAAC,CAAC;AAClB,WAAI,GAAW,CAAC,CAAC;AACjB,WAAI,GAAW,CAAC,CAAC;AACjB,YAAK,GAAW,CAAC,CAAC;AAClB,WAAI,GAAW,EAAE,CAAC;;ACtBpC;AACA;IACI,OAAO,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI;;QAEhE,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACpC,IAAI,KAAK,GAAG,IAAI,KAAK,GAAG,GAAG,MAAM,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACrD,OAAO,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;KAC7B,CAAC,CAAC;CACN;;ACRD;;;;;;;;;;;;;;;AAgBA,AAOA,MAAM,GAAG,GAAW,aAAa,CAAC;AAClC,MAAM,IAAI,GAAW,IAAI,EAAE,CAAC;AAC5B,MAAM,QAAQ,GAAW,GAAG,CAAC;;AAE7B,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAEhC,MAAM,GAAG,GAAW,MAAM,CAAC,WAAW,EAAE,CAAC;;;;AAKzC;;;;;;IAUI,YAAmB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;QARxB,OAAE,GAAc,IAAI,CAAC;QACrB,mBAAc,GAAoD,EAAE,CAAC;KAQ3E;IAEM,SAAS,CAAC,SAAoB;QACjC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;KACvB;;;;;IAMM,SAAS,CAAC,SAAoB;QACjC,IAAI,SAAS,CAAC,IAAI,KAAKA,qBAAa,CAAC,KAAK,EAAE;YACxC,MAAM,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;YACxB,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;gBACzB,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChD,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;aAClC;YACD,OAAO;SACV;QACD,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,iDAAiD,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9E,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,GAAG,EAAE,EAAC,MAAM,EAAE,EAAC,IAAI,EAAEL,iBAAS,CAAC,iBAAiB,EAAC,EAAC,CAAC,CAAC;KAC9F;;;;;;IAOM,WAAW,CAAC,GAAW,EAAE,IAAS;QACrC,MAAM,OAAO,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,GAAG,EAAEK,qBAAa,CAAC,OAAO,EAAE,OAAO,CAAC,eAAe,EAAE,EACrF,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QAC3C,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAC5D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;YAC1C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC7B,CAAC,CAAC;KACN;;;;;;;IAQM,SAAS,CAAC,EAAU,EAAE,GAAW,EAAE,IAAS;QAC/C,MAAM,OAAO,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,GAAG,EAAEA,qBAAa,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QACzG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACxB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KAC7B;;;;;IAMM,SAAS,CAAC,IAAS;QACtB,MAAM,OAAO,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,QAAQ,EAAEA,qBAAa,CAAC,KAAK,EAAE,OAAO,CAAC,eAAe,EAAE,EACxF,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QAC3C,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KAC7B;;;;;;IAOM,WAAW,CAAC,OAAkB;QACjC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;KACzC;;AA/EgB,uBAAe,GAAW,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCjD;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;;IAUI,YAAmB,KAAsB,EACtB,MAAc,EACd,IAAa,EACb,QAAgB,EAChB,QAAgB;QAJhB,UAAK,GAAL,KAAK,CAAiB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAS;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,aAAQ,GAAR,QAAQ,CAAQ;KAElC;CACJ;;ACrCD;;;;;;;;;;;;;;;AAgBA,AAGA;;;AAGA,yBAAiC,SAAQ,cAAc;;;;IAKnD,YAAmB,MAAuB;QACtC,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QADvB,WAAM,GAAN,MAAM,CAAiB;KAEzC;CACJ;;AC9BD;;;;;;;;;;;;;;;;;;AAwBA;;;;;;;;;IAaI,YAAmB,KAAa,EACb,QAAgB,EAChB,IAAY,EACZ,SAAoB,EACpB,YAA8B;QAJ9B,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,SAAI,GAAJ,IAAI,CAAQ;QACZ,cAAS,GAAT,SAAS,CAAW;QACpB,iBAAY,GAAZ,YAAY,CAAkB;QAC7C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;KACzB;CACJ;;AC9CD;;;;;;;;;;;;;;;AAoBA,AAOA,MAAMC,KAAG,GAAW,MAAM,CAAC,WAAW,EAAE,CAAC;;;;AAKzC;;;;;;IAYE,YAAmB,YAAiB,EAAS,YAA0B;QAApD,iBAAY,GAAZ,YAAY,CAAK;QAAS,iBAAY,GAAZ,YAAY,CAAc;QACrE,IAAI,CAAC,YAAY,CAAC,MAAM,GAAGL,uBAAe,CAAC,IAAI,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;;QAEpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtB;;;;;IAMM,SAAS;QACd,OAAO,IAAI,CAAC,YAAY;cACnB,IAAI,CAAC,YAAY,CAAC,MAA0B;cAC7C,IAAI,CAAC;KACV;;;;;IAYM,kBAAkB,CAAC,SAAiB;QACzC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;KAClC;IAyBM,IAAI,CAAC,QAAgB;QAC1B,OAAOD,iBAAS,CAAC,iBAAiB,CAAC;KACpC;IAEM,SAAS,CAAC,KAAa;QAC5B,OAAOA,iBAAS,CAAC,iBAAiB,CAAC;KACpC;IAEM,OAAO,CAAC,IAAa;QAC1B,OAAOA,iBAAS,CAAC,iBAAiB,CAAC;KACpC;IAEM,KAAK;QACV,OAAOA,iBAAS,CAAC,iBAAiB,CAAC;KACpC;IAEM,IAAI;QACT,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,YAAY,CAACC,uBAAe,CAAC,IAAI,CAAC,CAAC;QACxC,OAAOD,iBAAS,CAAC,EAAE,CAAC;KACrB;IAEM,KAAK;QACV,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,YAAY,CAACC,uBAAe,CAAC,IAAI,CAAC,CAAC;QACxC,OAAOD,iBAAS,CAAC,EAAE,CAAC;KACrB;IAEM,MAAM;QACX,OAAOA,iBAAS,CAAC,iBAAiB,CAAC;KACpC;;;;IAKM,KAAK;QACV,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChB,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAEM,QAAQ,CACb,IAAe,EACf,OAAe,EACf,OAAgB;QAEhB,OAAOA,iBAAS,CAAC,iBAAiB,CAAC;KACpC;;;;;IAQS,YAAY;QACpB,MAAM,MAAM,GAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1C,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YAC1B,IAAI,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;gBAChCM,KAAG,CAAC,KAAK,CAAC,2BAA2B,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;gBACvD,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;aAC/D;SACF;QACD,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;KAC5E;;;;;IAMS,eAAe;QACvB,MAAM,MAAM,GAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1C,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YAC1B,IAAI,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;aAClE;SACF;KACF;IACS,gBAAgB,CAAC,KAAK;QAC9B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,OAAO,CAAC,IAAI,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;YAC3D,OAAO;SACR;QACD,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KAC1D;IAEO,cAAc,CAAC,KAAK;QAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;KACxC;IAEO,YAAY,CAAC,MAAM;QACzB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtBA,KAAG,CAAC,IAAI,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;YACvD,OAAO;SACR;QACD,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAEvC,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;QAChD,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;;QAGlC,IAAI,cAAc,KAAK,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YAC/C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;SAC5D;aAAM,IACL,IAAI,CAAC,eAAe,KAAK,CAAC;YAC1B,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,EACzD;YACA,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;SAC5D;;QAGD,IACE,IAAI,CAAC,YAAY,CAAC,MAAM,KAAKL,uBAAe,CAAC,IAAI;YACjD,IAAI,CAAC,YAAY,CAAC,MAAM,KAAKA,uBAAe,CAAC,OAAO,EACpD;YACA,IAAI,CAAC,YAAY,CAAC,MAAM,GAAGA,uBAAe,CAAC,IAAI,CAAC;YAChD,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;SAC5D;KACF;CACF;;AC7ND;;;;;;;;;;;;;;;AAgBA,AAQA;;;AAGA,gBAAwB,SAAQ,KAAK;;;;;IAK5B,iBAAiB;;QAEtB,OAAO,IAAI,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAmB,CAAC;KAC5E;;;;;;;;;;IAWM,WAAW,CAChB,KAAa,EACb,QAAgB,EAChB,IAAY,EACZ,SAAoB,EACpB,YAA8B;;QAG9B,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAC1B,KAAK,EACL,QAAQ,EACR,IAAI,EACJ,SAAS,EACT,YAAY,CACb,CAAC;KACH;IAEM,aAAa;QAClB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;IAKM,IAAI,CAAC,GAAW;QACrB,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,EAAE,CAAC;SAC5B;KACF;;;;;;IAMS,cAAc;QACtB,OAAO;YACL,KAAK,EAAEA,uBAAe,CAAC,SAAS;YAChC,KAAK,EAAEA,uBAAe,CAAC,OAAO;YAC9B,IAAI,EAAEA,uBAAe,CAAC,OAAO;SAC9B,CAAC;KACH;CACF;;AC1FD;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;;IAUI,YAAmB,IAAe,EAAS,OAAe,EAAS,UAAmB,KAAK,EACxE,WAAmB,EAAE,EAAS,QAAgB,EAAE;QADhD,SAAI,GAAJ,IAAI,CAAW;QAAS,YAAO,GAAP,OAAO,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAiB;QACxE,aAAQ,GAAR,QAAQ,CAAa;QAAS,UAAK,GAAL,KAAK,CAAa;KAClE;CACJ;;ACjCD;;;;;;;;;;;;;;;AAgBA,AAGA;;;AAGA,yBAAiC,SAAQ,cAAc;;;;;;;;;IAUnD,YAAmB,KAAsB,EACtB,MAAc,EACd,IAAa,EACb,QAAgB,EAChB,QAAgB;QAC/B,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QALhC,UAAK,GAAL,KAAK,CAAiB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAS;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,aAAQ,GAAR,QAAQ,CAAQ;KAElC;CAEJ;;ACxCD;;;;;;;;;;;;;;;AAeA,AAYA,MAAMM,KAAG,GAAW,gBAAgB,CAAC;AACrC,MAAMD,KAAG,GAAW,MAAM,CAAC,WAAW,EAAE,CAAC;;;;AAIzC,gBAAwB,SAAQ,KAAK;;;;;IAK5B,iBAAiB;QACtB,OAAO,IAAI,mBAAmB,CAC5B,IAAI,CAAC,YAAY,CAAC,MAAM,EACxB,IAAI,CAAC,YAAY,CAAC,MAAM,EACxB,IAAI,CAAC,YAAY,CAAC,KAAK,EACvB,IAAI,CAAC,YAAY,CAAC,WAAW,EAC7B,IAAI,CAAC,YAAY,CAAC,QAAQ,CACT,CAAC;KACrB;;;;;;;;;;IAWM,WAAW,CAChB,KAAa,EACb,QAAgB,EAChB,IAAY,EACZ,SAAoB,EACpB,YAA8B;QAE9B,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAC1B,KAAK,EACL,QAAQ,EACR,IAAI,EACJ,SAAS,EACT,YAAY,CACb,CAAC;KACH;IAEM,aAAa;QAClB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAEM,QAAQ,CACb,IAAe,EACf,OAAe,EACf,OAAgB;QAEhB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9B,IAAI,UAAU,GAAQ,IAAI,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,GAAW,CAAC,CAAC;QAClB,IACE,MAAM,KAAKL,uBAAe,CAAC,SAAS;YACpC,MAAM,KAAKA,uBAAe,CAAC,OAAO;YAClC,MAAM,KAAKA,uBAAe,CAAC,MAAM,EACjC;YACA,IAAI;gBACF,IAAI,EAAE,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;gBAC7B,QAAQ,IAAI;oBACV,KAAKE,iBAAS,CAAC,KAAK;wBAClB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAClD,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC;yBAC9C;wBACD,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,OAAO,CAAC;wBAC7C,MAAM;oBACR,KAAKA,iBAAS,CAAC,KAAK;wBAClB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAClD,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,OAAO,CAAC;yBAC/C;wBACD,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,QAAQ,GAAG,OAAO,CAAC;wBAC9C,MAAM;oBACR,KAAKA,iBAAS,CAAC,IAAI;wBACjB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BACjD,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,GAAG,UAAU,GAAG,SAAS,CAAC;yBAClE;wBACD,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,OAAO,GAAG,SAAS,GAAG,UAAU,CAAC;wBAClE,MAAM;oBACR;wBACE,OAAOH,iBAAS,CAAC,aAAa,CAAC;iBAClC;gBACD,OAAOA,iBAAS,CAAC,EAAE,CAAC;aACrB;YAAC,OAAO,CAAC,EAAE;gBACVM,KAAG,CAAC,IAAI,CAACC,KAAG,GAAG,mBAAmB,EAAE,CAAC,CAAC,CAAC;gBACvC,OAAOP,iBAAS,CAAC,aAAa,CAAC;aAChC;SACF;aAAM;YACL,OAAOA,iBAAS,CAAC,oBAAoB,CAAC;SACvC;KACF;IACM,IAAI,CAAC,QAAQ;QAClB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9B,IACE,MAAM,KAAKC,uBAAe,CAAC,SAAS;YACpC,MAAM,KAAKA,uBAAe,CAAC,OAAO;YAClC,MAAM,KAAKA,uBAAe,CAAC,MAAM,EACjC;YACA,OAAOD,iBAAS,CAAC,oBAAoB,CAAC;SACvC;QACD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,QAAQ,CAAC;QACzC,OAAOA,iBAAS,CAAC,EAAE,CAAC;KACrB;IAEM,SAAS,CAAC,KAAa;QAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9B,IACE,MAAM,KAAKC,uBAAe,CAAC,OAAO;YAClC,MAAM,KAAKA,uBAAe,CAAC,MAAM,EACjC;YACA,OAAOD,iBAAS,CAAC,oBAAoB,CAAC;SACvC;QACD,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC;QACjC,OAAOA,iBAAS,CAAC,EAAE,CAAC;KACrB;IAEM,OAAO,CAAC,IAAa;QAC1B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9B,IACE,MAAM,KAAKC,uBAAe,CAAC,OAAO;YAClC,MAAM,KAAKA,uBAAe,CAAC,MAAM,EACjC;YACA,OAAOD,iBAAS,CAAC,oBAAoB,CAAC;SACvC;QACD,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC;QAC/B,OAAOA,iBAAS,CAAC,EAAE,CAAC;KACrB;IAEM,KAAK;QACV,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9B,IACE,MAAM,KAAKC,uBAAe,CAAC,SAAS;YACpC,MAAM,KAAKA,uBAAe,CAAC,OAAO,EAClC;YACA,OAAOD,iBAAS,CAAC,oBAAoB,CAAC;SACvC;QACD,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,OAAOA,iBAAS,CAAC,EAAE,CAAC;KACrB;IAEM,MAAM;QACX,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9B,IAAI,MAAM,KAAKC,uBAAe,CAAC,MAAM,EAAE;YACrC,OAAOD,iBAAS,CAAC,oBAAoB,CAAC;SACvC;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACzB,OAAOA,iBAAS,CAAC,EAAE,CAAC;KACrB;;;;;IAKM,IAAI,CAAC,GAAW,EAAE,QAAkB;QACzC,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACvC;QACD,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC1B,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAC1B;KACF;;;;;IAMD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,KAAKI,wBAAgB,CAAC,QAAQ,CAAC;KACjE;;;;;;;IAQS,cAAc;QACtB,OAAO;YACL,KAAK,EAAEH,uBAAe,CAAC,IAAI;YAC3B,KAAK,EAAEA,uBAAe,CAAC,IAAI;YAC3B,KAAK,EAAEA,uBAAe,CAAC,OAAO;YAC9B,SAAS,EAAEA,uBAAe,CAAC,SAAS;YACpC,KAAK,EAAEA,uBAAe,CAAC,MAAM;YAC7B,OAAO,EAAEA,uBAAe,CAAC,OAAO;YAChC,OAAO,EAAEA,uBAAe,CAAC,SAAS;YAClC,UAAU,EAAEA,uBAAe,CAAC,OAAO;SACpC,CAAC;KACH;IACS,gBAAgB,CAAC,KAAK;QAC9B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtBK,KAAG,CAAC,KAAK,CAAC,sCAAsC,GAAG,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;YACrE,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClBA,KAAG,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;YAC3D,OAAO;SACR;QAED,IACE,EACE,IAAI,CAAC,YAAY,CAAC,WAAW;YAC7B,IAAI,CAAC,YAAY,CAAC,WAAW;YAC7B,IAAI,CAAC,YAAY,CAAC,UAAU,CAC7B,EACD;YACAA,KAAG,CAAC,KAAK,CAAC,qDAAqD,CAAC,CAAC;SAClE;QACD,IAAI,SAAS,GAAW,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE;YAC/C,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;SAC1D;KACF;;;;;;;;IASO,qBAAqB,CAAC,KAAU,EAAE,IAAY,EAAE,WAAmB,EACzE,UAAiD;QACjD,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ;YAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;gBAClB,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC;aAC9B;YACD,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACvC,IAAI,OAAO,GAAWC,KAAG,GAAG,2BAA2B,GAAG,IAAI,GAAG,SAAS,GAAG,WAAW,GAAG,WAAW;oBACpG,QAAQ,CAAC,GAAG,GAAG,mBAAmB,CAAC;gBACrC,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,GAAG,EAAE;oBAClC,OAAO,IAAI,YAAY,GAAG,QAAQ,CAAC,IAAI,GAAG,aAAa,CAAC;iBACzD;gBACDD,KAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACnB;SACF,CAAC,CAAC;KACJ;IAEO,YAAY;;QAElB,IAAI,MAAM,CAAC;QACX,MAAM,GAAG,EAAE,CAAC;;QAEZ,MAAM,WAAW,GAAmB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;QAClE,IAAI,WAAW,EAAE;YACf,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBACvD,MAAM,UAAU,GAAe,WAAW,CAAC,KAAK,CAAC,CAAC;gBAClD,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE;oBACrD,EAAC,GAAG,EAAE,SAAS,EAAC;oBAChB,EAAC,GAAG,EAAE,UAAU,EAAC;oBACjB,EAAC,GAAG,EAAE,OAAO,EAAC;iBACf,CAAC,CAAC;gBACH,MAAM,CAAC,IAAI,CACT,IAAI,KAAK,CACPH,iBAAS,CAAC,KAAK,EACf,KAAK,CAAC,QAAQ,EAAE,EAChB,UAAU,CAAC,OAAO,EAClB,UAAU,CAAC,QAAQ,EACnB,UAAU,CAAC,KAAK,CACjB,CACF,CAAC;aACH;YACD,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,MAAM,CAAC;SACpC;;QAED,MAAM,GAAG,EAAE,CAAC;QACZ,MAAM,WAAW,GAAmB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;QAClE,IAAI,WAAW,EAAE;YACf,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBACvD,MAAM,UAAU,GAAe,WAAW,CAAC,KAAK,CAAC,CAAC;gBAClD,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE;oBACrD,EAAC,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAC;oBAClC,EAAC,GAAG,EAAE,UAAU,EAAC;oBACjB,EAAC,GAAG,EAAE,OAAO,EAAC;iBACf,CAAC,CAAC;gBACH,MAAM,CAAC,IAAI,CACT,IAAI,KAAK,CACPA,iBAAS,CAAC,KAAK,EACf,KAAK,CAAC,QAAQ,EAAE,EAChB,UAAU,CAAC,QAAQ,EACnB,UAAU,CAAC,QAAQ,EACnB,UAAU,CAAC,KAAK,CACjB,CACF,CAAC;aACH;YAAA,AAAC;YACF,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,MAAM,CAAC;SACpC;;QAED,MAAM,GAAG,EAAE,CAAC;QACZ,MAAM,UAAU,GAAkB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;QAC/D,IAAI,UAAU,EAAE;YACd,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBACtD,MAAM,SAAS,GAAc,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC/C,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE;oBACpD,EAAC,GAAG,EAAE,UAAU,EAAC;oBACjB,EAAC,GAAG,EAAE,OAAO,EAAC;iBACf,CAAC,CAAC;gBACH,MAAM,CAAC,IAAI,CACT,IAAI,KAAK,CACPA,iBAAS,CAAC,IAAI,EACd,KAAK,CAAC,QAAQ,EAAE,EAChB,SAAS,CAAC,IAAI,KAAK,SAAS,EAC5B,SAAS,CAAC,QAAQ,EAClB,SAAS,CAAC,KAAK,CAChB,CACF,CAAC;aACH;YAAA,AAAC;YACF,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,MAAM,CAAC;SACnC;KACF;CACF;;ACzVD,IAAY,gBAYX;AAZD,WAAY,gBAAgB;IACxB,mCAAe,CAAA;IACf,qCAAiB,CAAA;IACjB,iCAAa,CAAA;IACb,mCAAe,CAAA;IACf,iCAAa,CAAA;IACb,mCAAe,CAAA;IACf,qCAAiB,CAAA;IACjB,6DAAyC,CAAA;IACzC,gDAA4B,CAAA;IAC5B,iCAAa,CAAA;IACb,uCAAmB,CAAA;CACtB,EAZW,gBAAgB,KAAhB,gBAAgB,QAY3B;;ACbD;;;;;;;;;;;;;;;AAiCA,MAAMI,KAAG,GAAW,kBAAkB,CAAC;AACvC,MAAMD,KAAG,GAAW,MAAM,CAAC,WAAW,EAAE,CAAC;;;AAIzC,MAAM,gBAAgB,GAAyC,EAAE,CAAC;;;;AAKlE,kBAA0B,SAAQ,OAAO;;;;;IAerC;QACI,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QAT1B,UAAK,GAAU,IAAI,CAAC;QAEpB,WAAM,GAAY,EAAE,CAAC;KAQ5B;IAEM,WAAW,CAAC,QAAwB;QACvC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;IAEM,oBAAoB,CAAC,KAAkB,EAAE,YAAiB;QAC7D,IAAI,KAAK,GAAG,IAAI,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QAC/C,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;YACrB,IAAI,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC3B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;aACnC;SACJ;KACJ;IAEM,oBAAoB,CAAC,KAAkB,EAAE,YAAiB;QAC7D,IAAI,KAAK,GAAG,IAAI,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QAC/C,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;YACrB,IAAI,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC3B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;aACnC;SACJ;KACJ;;;;;IAMM,SAAS,CAAC,SAAoB;;QAEjC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAChDA,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,gBAAgB,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,CAAC;YAC9E,IAAI,SAAS,CAAC,IAAI,KAAKF,qBAAa,CAAC,OAAO,EAAE;gBAC1C,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,GAAG,EAAE;oBACxC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;oBACjC,MAAM,EAAE,EAAE,IAAI,EAAEL,iBAAS,CAAC,iBAAiB,EAAE;iBAChD,CAAC,CAAC;aACN;YACD,OAAO;SACV;;QAGD,MAAM,gBAAgB,GAAsB,gBAAgB,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1F,MAAM,kBAAkB,GAAU,EAAE,CAAC;QACrC,MAAM,aAAa,GAAO,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;QAC9D,IAAI,QAAQ,GAAY,IAAI,CAAC;QAC7B,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAgC;YAC7D,QAAQ,SAAS,CAAC,IAAI;gBAClB,KAAK,IAAI;oBACL,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;oBACtC,MAAM;gBACV,KAAK,KAAK;oBACN,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;oBACvC,MAAM;gBACV,KAAK,SAAS;oBACV,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACxD,MAAM;gBACV;oBACI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;wBAC/CM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,qCAAqC,GAAG,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;wBAC/E,QAAQ,GAAG,KAAK,CAAC;qBACpB;yBAAM;wBACH,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;qBAC1D;aACR;SACJ,CAAC,CAAC;;QAGH,IAAI,CAAC,QAAQ,EAAE;YACXD,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,wBAAwB,GAAG,gBAAgB,CAAC,UAAU,GAAG,qBAAqB,CAAC,CAAC;YAChG,IAAI,SAAS,CAAC,IAAI,KAAKF,qBAAa,CAAC,OAAO,EAAE;gBAC1C,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,GAAG,EAAE;oBACxC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;oBACjC,MAAM,EAAE,EAAE,IAAI,EAAEL,iBAAS,CAAC,cAAc,EAAE;iBAC7C,CAAC,CAAC;aACN;YACD,OAAO;SACV;;QAGD,IAAI;YACA,MAAM,UAAU,GAAmC,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;YAC3G,IAAI,QAAQ,UAAU,CAAC,KAAK,WAAW,EAAE;;gBAErC,IAAI,OAAO,UAAU,CAAC,MAAM,CAAC,KAAK,UAAU,EAAE;oBACpB,UAAW,CAAC,IAAI,CAAC,CAAC,MAAiB;wBACrD,IAAI,QAAQ,MAAM,CAAC,KAAK,WAAW,EAAE;4BACjC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,GAAG,EAAE;gCACxC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;gCACjC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;6BAC3B,CAAC,CAAC;yBACN;qBACJ,EAAE,CAAC,CAAC;wBACDM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,wBAAwB,GAAG,gBAAgB,CAAC,UAAU,GAAG,cAAc,EAAE,CAAC,CAAC,CAAC;wBAC5F,IAAI,SAAS,CAAC,IAAI,KAAKF,qBAAa,CAAC,OAAO,EAAE;4BAC1C,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,GAAG,EAAE;gCACxC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;gCACjC,MAAM,EAAE,EAAE,IAAI,EAAEL,iBAAS,CAAC,aAAa,EAAE;6BAC5C,CAAC,CAAC;yBACN;qBACJ,CAAC,CAAC;iBACN;qBAAM;oBACH,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,GAAG,EAAE;wBACxC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;wBACjC,MAAM,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;qBAC/B,CAAC,CAAC;iBACN;aACJ;SACJ;QAAC,OAAO,CAAC,EAAE;YACRM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,wBAAwB,GAAG,gBAAgB,CAAC,UAAU,GAAG,cAAc,EAAE,CAAC,CAAC,CAAC;YAC5F,IAAI,SAAS,CAAC,IAAI,KAAKF,qBAAa,CAAC,OAAO,EAAE;gBAC1C,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,GAAG,EAAE;oBACxC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;oBACjC,MAAM,EAAE,EAAE,IAAI,EAAEL,iBAAS,CAAC,aAAa,EAAE;iBAC5C,CAAC,CAAC;aACN;SACJ;KACJ;;;;;;;;;;;;;;IA6BM,SAAS,CAAC,GAAW,EAAE,KAAa,EAAE,QAAgB,EAAE,IAAY,EAAE,SAAoB,EAC7F,YAA8B,EAAE,QAAiB,EAAE,SAAiB,EACpE,OAAY;QACZM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,sBAAsB,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,SAAS;YACtG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC;QAC3E,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;YACxC,OAAOP,iBAAS,CAAC,iBAAiB,CAAC;SACtC;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;QACvE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;KACpD;;;;;;;IAiBM,OAAO,CAAC,IAAe,EAAE,OAAe,EAAE,OAAgB,EAAE,OAAY;QAC3EM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,SAAS,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,OAAOP,iBAAS,CAAC,qBAAqB,CAAC;SAC1C;QACD,IAAI,UAAU,GAAc,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QACxE,OAAO,CAAC,UAAU,KAAKA,iBAAS,CAAC,EAAE,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;KAC/F;;;;;;IAaM,QAAQ,CAAC,OAAY;QACxBM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,UAAU,CAAC,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,OAAOP,iBAAS,CAAC,qBAAqB,CAAC;SAC1C;QAED,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC;QAClE,KAAK,MAAM,KAAKC,uBAAe,CAAC,MAAM,GAAG;YACrC,OAAOD,iBAAS,CAAC,oBAAoB,CAAC;SACzC;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;KACnD;;;;;;IAaM,OAAO,CAAC,OAAY;QACvBM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,SAAS,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,OAAOP,iBAAS,CAAC,qBAAqB,CAAC;SAC1C;QACD,IAAI,UAAU,GAAc,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAC/C,OAAO,CAAC,UAAU,KAAKA,iBAAS,CAAC,EAAE,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;KAC/F;;;;;;IAaM,MAAM,CAAC,OAAY;QACtBM,KAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,OAAON,iBAAS,CAAC,qBAAqB,CAAC;SAC1C;QAED,IAAI,UAAU,GAAc,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAC9C,OAAO,CAAC,UAAU,KAAKA,iBAAS,CAAC,EAAE,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;KAC9F;;;;;;IAaM,OAAO,CAAC,OAAY;QACvBM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,SAAS,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,OAAOP,iBAAS,CAAC,qBAAqB,CAAC;SAC1C;QAED,IAAI,UAAU,GAAc,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAC/C,OAAO,CAAC,UAAU,KAAKA,iBAAS,CAAC,EAAE,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;KAC/F;;;;;;;IAeM,MAAM,CAAC,QAAgB,EAAE,OAAY;QAExCM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,QAAQ,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,OAAOP,iBAAS,CAAC,qBAAqB,CAAC;SAC1C;QAED,IAAI,UAAU,GAAc,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,OAAO,CAAC,UAAU,KAAKA,iBAAS,CAAC,EAAE,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;KAC9F;;;;;;;IAeM,QAAQ,CAAC,MAAc,EAAE,OAAY;QACxCM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,UAAU,CAAC,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,OAAOP,iBAAS,CAAC,qBAAqB,CAAC;SAC1C;QAED,IAAI,UAAU,GAAc,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACzD,OAAO,CAAC,UAAU,KAAKA,iBAAS,CAAC,EAAE,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;KAChG;;;;;;;IAeM,MAAM,CAAC,IAAa,EAAE,OAAY;QACrCM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,QAAQ,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,OAAOP,iBAAS,CAAC,qBAAqB,CAAC;SAC1C;QACD,IAAI,UAAU,GAAc,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACrD,OAAO,CAAC,UAAU,KAAKA,iBAAS,CAAC,EAAE,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;KAC9F;;;;;;;;IAiBM,mBAAmB,CAAC,EAAU,EAAE,GAAW,EAAE,OAAY;QAC5DM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,qBAAqB,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,OAAOP,iBAAS,CAAC,qBAAqB,CAAC;SAC1C;QACD,IAAI,MAAM,GAAQ,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;QACjD,MAAM,CAAC,IAAI,GAAGA,iBAAS,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,YAAY,CAAC,MAAM,CAAC,eAAe,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;KACnG;;;;;;;;IAiBM,aAAa,CAAC,EAAU,EAAE,GAAW,EAAE,OAAY;QACtDM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,gBAAgB,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,OAAOP,iBAAS,CAAC,qBAAqB,CAAC;SAC1C;QACD,IAAI,MAAM,GAAQ,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC7C,MAAM,CAAC,IAAI,GAAGA,iBAAS,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,YAAY,CAAC,MAAM,CAAC,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;KACpG;;;;IAKM,kBAAkB;QACrB,IAAI,CAAC,SAAS,CAAC;YACX,IAAI,EAAE,YAAY,CAAC,MAAM,CAAC,eAAe;YACzC,OAAO,EAAE,IAAI;YACb,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;SACzC,CAAC,CAAC;KACN;;;;IAKM,mBAAmB;;QAEtB,IAAI,CAAC,SAAS,CAAC;YACX,IAAI,EAAE,YAAY,CAAC,MAAM,CAAC,gBAAgB;YAC1C,OAAO,EAAE,IAAI;YACb,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;SACrC,CAAC,CAAC;KACN;IAEM,cAAc,CAAC,MAAsB;QACxC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;KAClD;IAEM,gBAAgB,CAAC,QAAkB;QACtC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;KACpD;IAEO,YAAY,CAAC,MAAc,EAAE,IAAI;QACrC,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;YAC7B,IAAI;gBACA,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aAC3D;YAAC,OAAO,CAAC,EAAE;gBACRM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,0CAA0C,GAAG,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;gBAChFD,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,0CAA0C,GAAG,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;gBAChF,OAAOP,iBAAS,CAAC,oBAAoB,CAAC;aACzC;SACJ;QACD,OAAOA,iBAAS,CAAC,EAAE,CAAC;KACvB;;AAnca,sBAAS,GAAW,iBAAiB,CAAC;AAEnC,mBAAM,GAAQ;IAC3B,gBAAgB,EAAE,iBAAiB;IACnC,eAAe,EAAE,gBAAgB;CACpC,CAAC;AA6JFQ;IAdC,qBAAqB,CAAC;QACnB,OAAO,EAAE,gBAAgB,CAAC,OAAO;QACjC,MAAM,EAAE;YACJ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE;YAC7B,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE;YAC/B,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE;YAClC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;YAC9B,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAEN,iBAAS,EAAE;YACtC,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAEE,wBAAgB,EAAE;YAChD,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE;YACnC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE;YACnC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;SAClC;KACJ,CAAC;6CAcD;AAiBDI;IATC,qBAAqB,CAAC;QACnB,OAAO,EAAE,gBAAgB,CAAC,KAAK;QAC/B,MAAM,EAAE;YACJ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAEL,iBAAS,EAAE;YACjC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE;YACjC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE;YAClC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;SAClC;KACJ,CAAC;2CAQD;AAaDK;IANC,qBAAqB,CAAC;QACnB,OAAO,EAAE,gBAAgB,CAAC,MAAM;QAChC,MAAM,EAAE;YACJ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;SAClC;KACJ,CAAC;4CAaD;AAaDA;IANC,qBAAqB,CAAC;QACnB,OAAO,EAAE,gBAAgB,CAAC,KAAK;QAC/B,MAAM,EAAE;YACJ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;SAClC;KACJ,CAAC;2CAQD;AAaDA;IANC,qBAAqB,CAAC;QACnB,OAAO,EAAE,gBAAgB,CAAC,IAAI;QAC9B,MAAM,EAAE;YACJ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;SAClC;KACJ,CAAC;0CASD;AAaDA;IANC,qBAAqB,CAAC;QACnB,OAAO,EAAE,gBAAgB,CAAC,KAAK;QAC/B,MAAM,EAAE;YACJ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;SAClC;KACJ,CAAC;2CASD;AAeDA;IAPC,qBAAqB,CAAC;QACnB,OAAO,EAAE,gBAAgB,CAAC,IAAI;QAC9B,MAAM,EAAE;YACJ,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE;YAClC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;SAClC;KACJ,CAAC;0CAUD;AAeDA;IAPC,qBAAqB,CAAC;QACnB,OAAO,EAAE,gBAAgB,CAAC,MAAM;QAChC,MAAM,EAAE;YACJ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE;YAChC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;SAClC;KACJ,CAAC;4CASD;AAeDA;IAPC,qBAAqB,CAAC;QACnB,OAAO,EAAE,gBAAgB,CAAC,IAAI;QAC9B,MAAM,EAAE;YACJ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;YAC/B,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;SAClC;KACJ,CAAC;0CAQD;AAiBDA;IARC,qBAAqB,CAAC;QACnB,OAAO,EAAE,gBAAgB,CAAC,mBAAmB;QAC7C,MAAM,EAAE;YACJ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;YAC5B,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE;YAC7B,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;SAClC;KACJ,CAAC;uDASD;AAiBDA;IARC,qBAAqB,CAAC;QACnB,OAAO,EAAE,gBAAgB,CAAC,YAAY;QACtC,MAAM,EAAE;YACJ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;YAC5B,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE;YAC7B,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;SAClC;KACJ,CAAC;iDASD;;;;;;AAsDL,+BAA+B,aAAqC;IAChE,OAAO,CAAC,MAAW,EAAE,WAAmB,EAAE,UAA6C;;QAEnF,gBAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG;YACtC,MAAM,EAAE,UAAU,CAAC,KAAK;YACxB,UAAU,EAAE,WAAW;YACvB,MAAM,EAAE,aAAa,CAAC,MAAM;SAC/B,CAAC;KACL,CAAC;CACL;;AChgBD;;;;;;;;;;;;;;;AAgBA,AAGA,MAAMD,KAAG,GAAW,mBAAmB,CAAC;AACxC,MAAMD,KAAG,GAAW,MAAM,CAAC,WAAW,EAAE,CAAC;;;;AAKzC,mBAA2B,SAAQ,OAAO;;;;IAkBtC;QACI,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;KAClC;;;;;;IAOM,SAAS,CAAC,EAAa;QAC1B,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;KACxB;;;;;IAKO,aAAa;QACjBA,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,sBAAsB,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,CAAC,EAAC,IAAI,EAAE,aAAa,CAAC,MAAM,CAAC,iBAAiB,EAAE,MAAM,EAAE,EAAC,MAAM,EAAE,WAAW,EAAC,EAAC,CAAC,CAAC;KACjG;;;;;;AAjCa,uBAAS,GAAW,kBAAkB,CAAC;;;;;AAMpC,oBAAM,GAAQ;IAC3B,iBAAiB,EAAE,iBAAiB;CACvC,CAAC;;ACtCN;;;;;;;;;;;;;;;AAeA,AASA,MAAMA,KAAG,GAAW,WAAW,CAAC;AAChC,MAAMD,KAAG,GAAW,MAAM,CAAC,WAAW,EAAE,CAAC;;AAEzC,MAAMG,WAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;;;AAKhC;;;;;IASE,YAAoB,MAAc,4BAA4B;QAA1C,QAAG,GAAH,GAAG,CAAuC;QARvD,UAAK,GAAG,KAAK,CAAC;QACd,OAAE,GAAc,IAAI,CAAC;QACpB,aAAQ,GAAc,EAAE,CAAC;QAO/B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;;;;;IAMM,KAAK;QACV,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM;YACvC,IAAI,CAAC,EAAE,GAAG,IAAIA,WAAS,CAAC,IAAI,CAAC,GAAG,EAAE;gBAChC,eAAe,EAAE,EAAE;gBACnB,kBAAkB,EAAE,KAAK;aAC1B,CAAC,CAAC;YACH,IAAI,CAAC,EAAE,CAAC,MAAM,GAAG;gBACf,OAAO,EAAE,CAAC;gBACV,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB,CAAC;YACF,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,SAAS,GAAG,CAAC,KAAK;gBACzCH,KAAG,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;aACvC,EAAE,CAAC;YACJ,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,CAAC,CAAQ;gBACzB,MAAM,CAAC,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aACjB,CAAC;YACF,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC3C,CAAC,CAAC;KACJ;;;;;;;IAQM,aAAa,CAAC,OAAe;;QAElC,IAAI,OAAO,GAAY,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;QACjC,OAAO,OAAO,CAAC;KAChB;;;;;;IAOM,eAAe;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAiB,CAAC;KAChE;;;;;;IAOM,gBAAgB;QACrB,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAkB,CAAC;KAClE;;;;;;;IAQM,UAAU,CAAC,OAAe;QAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAY,CAAC;KAC1C;;;;;IAKM,YAAY,CAAC,OAAgB;QAClC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;KACvC;;;;;IAKO,iBAAiB;QACvB,IAAI,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;KACvC;;;;;IAMO,kBAAkB;QACxB,IAAI,OAAO,GAAkB,IAAI,aAAa,EAAE,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;KACvC;;;;;;IAMO,OAAO,CAAC,SAAoB;QAClC,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3D,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACvD,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SAC9B;aAAM;YACLA,KAAG,CAAC,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;YACtE,IAAI,OAAO,GAAG,IAAI,SAAS,CACzB,SAAS,CAAC,GAAG,EACb,SAAS,CAAC,GAAG,EACbD,qBAAa,CAAC,KAAK,EACnB,SAAS,CAAC,EAAE,EACZ,IAAI,gBAAgB,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE;gBAC9C,MAAM,EAAE,EAAE,IAAI,EAAEL,iBAAS,CAAC,iBAAiB,EAAE;aAC9C,CAAC,CACH,CAAC;YACF,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;SACvC;KACF;;;;;;IAOO,SAAS,CAAC,KAAK;QACrBM,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,oBAAoB,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAKF,qBAAa,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;YACzEC,KAAG,CAAC,KAAK,CAACC,KAAG,GAAG,0BAA0B,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAChE,OAAO;SACR;QACD,IAAI,OAAO,GAAc,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI;YACF,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC;SAC3B;QAAC,OAAO,CAAC,EAAE;;YAEV,OAAO,CAAC,KAAK,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;SACzC;KACF;IACO,OAAO,CAAC,KAAK;QACnBD,KAAG,CAAC,IAAI,CAACC,KAAG,GAAG,wBAAwB,EAAE,KAAK,CAAC,CAAC;KACjD;IAEO,OAAO,CAAC,KAAK;QACnBD,KAAG,CAAC,IAAI,CAACC,KAAG,GAAG,sBAAsB,CAAC,CAAC;KACxC;;;;;IAMO,WAAW;QACjBD,KAAG,CAAC,IAAI,CAACC,KAAG,GAAG,6BAA6B,CAAC,CAAC;QAC9C,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;;;;;IAMO,mBAAmB;QACzBD,KAAG,CAAC,IAAI,CAACC,KAAG,GAAG,yBAAyB,GAAG,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QAC/D,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC7B,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBACrC,IAAI,OAAO,GAAY,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAC1C,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC5B;SACF;KACF;CACF;;ACnND;;;;;;;;;;;;;;GAcG;;ACdH;;;;GAIG;;;;;;;;;;;;;;;;;;;;;"}